# importar datos
datos <- mtcars
# seleccionamos las variables cuantitativas que queramos (mas de dos)
df <- datos[c(1,3,4,5,6,7)]
library(psych)
# Matrixplot con el paquete psych
pairs.panels(df,
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = TRUE # show correlation ellipses
)
install.packages("psych")
library(psych)
# Matrixplot con el paquete psych
pairs.panels(df,
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = TRUE # show correlation ellipses
)
# importar datos
datos <- mtcars
# seleccionamos las variables cuantitativas que queramos (mas de dos)
df <- datos[c(1,3,4,5,6,7)]
library("Hmisc")
# Matriz de correlacion con el paquete Hmisc
res2 <- rcorr(as.matrix(df))
res2
# ++++++++++++++++++++++++++++
# flattenCorrMatrix
# ++++++++++++++++++++++++++++
# cormat : matrix of the correlation coefficients
# pmat : matrix of the correlation p-values
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
library(Hmisc)
tcor<-rcorr(as.matrix(df))
flattenCorrMatrix(tcor$r, tcor$P)
library("PerformanceAnalytics")
# Matrixplot mixto con el paquete Performance Analytics
chart.Correlation(df, histogram=TRUE, pch=19)
library(Hmisc)
# Diagrama de correlación con el paquete corrplot
tcor<-rcorr(as.matrix(df))
corrplot(tcor$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
library(corrplot)
# Diagrama de correlación con el paquete corrplot
tcor<-rcorr(as.matrix(df))
corrplot(tcor$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
