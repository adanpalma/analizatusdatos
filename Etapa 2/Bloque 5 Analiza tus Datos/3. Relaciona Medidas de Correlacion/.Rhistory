# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("wordcloud2","FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
##
# Instala los paquetes sinÃ³ los tienes instalados
##
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinÃ³ los tienes cargados
lapply(.packages, require, character.only=TRUE)
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna"),
Cantidad   = c(30,15, 35,20,10))
View(df)
wordcloud2(df,size=1.6)
wordcloud2(df)
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
Cantidad   = c(30,15, 35,20,10,18))
wordcloud2(df)
wordcloud2(df,size=2.3)
wordcloud2(df,size=1)
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
Cantidad   = c(35,15, 35,20,10,18))
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-light', backgroundColor="black")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="black")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="black")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="black")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="gray")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="blue")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="lightblue")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-light', backgroundColor="lightblue")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-light', backgroundColor="lightblue")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-light', backgroundColor="lightblue")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-light', backgroundColor="lightblue")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-light', backgroundColor="brown")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="brown")
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
Cantidad   = c(35,15, 35,20,10,18))
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="brown")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark')
View(df)
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark')
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
"Cantidad"  = c(35,15, 35,20,10,18))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark')
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
"Cantidad"  = c(35,15, 50,20,10,18))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark')
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
"Cantidad"  = c(35,15, 50,25,10,18))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
"Cantidad"  = c(35,15,50,25,10,18))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame("Palabra"  = c("Temor"),
"Cantidad"  = c(35))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("wordcloud2","FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinÃ³ los tienes cargados
lapply(.packages, require, character.only=TRUE)
df <-  data.frame("Palabra"  = c("Temor"),
"Cantidad"  = c(35))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento"),
"Cantidad"  = c(35,15))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento"),
"Cantidad"  = c(35,15))
df <-  data.frame(Palabra  = c("Temor","Desconocimiento"),
Cantidad  = c(35,15)
)
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones"),
Cantidad  = c(35,15,15)
)
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,50,25,10,18)
)
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,50,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","jjjjjj","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,50,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","jjjjjj","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,14,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,14,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,45,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,27,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desc","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,27,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,27,25,10,18)
)
wordcloud2(df)
wordcloud2(df,size = 0.5)
df <-  data.frame(Palabra  = c("Temor","Deconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,27,25,10,18)
)
wordcloud2(df,size = 0.5)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,27,25,10,18)
)
wordcloud2(df,size = 0.5)
wordcloud2(df,size = 0.5)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,23,27,25,10,18)
)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,23,27,25,10,18)
)
wordcloud2(df,size = 0.5)
wordcloud2(df,size = 1)
wordcloud2(df,size = .80)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1.5)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,23,32,25,10,18)
)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
wordcloud2(df,size = .70,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(40,23,32,25,10,18)
)
wordcloud2(df,size = .70,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(40,23,32,40,10,18)
)
wordcloud2(df,size = .70,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
.packages = c("lme4","lmerTest", "FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
lapply(.packages, require, character.only=TRUE)
setwd("~/Analiza tus Datos/Etapa 2/Bloque 5 Analiza tus Datos/3. Relaciona Medidas de Correlacion")
df <- read_excel("espalda.xlsx")
df$diff_oddi <-  df$`ODI Mes0` - df$`ODI Mes1`
df$NHD <-  factor(df$NHD)
dfdiffodi <-  df[c(8,12)
dfdiffodi <-  df[c(8,12)]
dfdiffodi <-  df[c(8,12)]
names(dfdiffodi)
names(dfdiffodi)[1]
names(dfdiffodi)[2]
ggline(data=dfdiffodi)
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2])
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2],
add = c("mean","jitter"))
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2],
add = c("mean_ci","jitter"))
df <- read_excel("espalda.xlsx")
df$diff_oddi <-  df$`ODI Mes0` - df$`ODI Mes1`
dfdiffodi <-  df[c(8,12)]
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2],
add = c("mean_ci","jitter"))
df <- read_excel("espalda.xlsx")
df$diff_oddi <-  df$`ODI Mes0` - df$`ODI Mes1`
df$NHD <-  factor(df$NHD) ##convierto a factor la variabla NHD Variable ordinal
dfdiffodi <-  df[c(8,12)]
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2],
add = c("mean_ci","jitter"))
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2],
add = c("mean_ci","jitter"),
palette = "jco")
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2],
add = c("mean_ci","jitter"),
palette = "jco") +
ggtitle("Diagrama Error DiffOddi vs NHD")
log(df$diff_oddi)
summary(df$diff_oddi)
sd(df$diff_oddi)
valor <- (df$diff_oddi-24)/14
valor
names(valor)
plot(valor)
log(df$diff_oddi)
plot(log(df$diff_oddi))
df$diff_oddi <- log(df$diff_oddi) ## Uso Logaritmo para acercar las escalas
df$NHD <-  factor(df$NHD) ##convierto a factor la variabla NHD Variable ordinal
dfdiffodi <-  df[c(8,12)]
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2],
add = c("mean_ci","jitter"),
palette = "jco") +
ggtitle("Diagrama Error DiffOddi vs NHD")
df$diff_oddi <- ( (df$diff_oddi - 24)/14 )## Uso Logaritmo para acercar las escalas
dfdiffodi <-  df[c(8,12)]
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2],
add = c("mean_ci","jitter"),
palette = "jco") +
ggtitle("Diagrama Error DiffOddi vs NHD")
df$diff_oddi <- log(df$diff_oddi) ## Uso Logaritmo para acercar las escalas
df$NHD <-  factor(df$NHD) ##convierto a factor la variabla NHD Variable ordinal
df <- read_excel("espalda.xlsx")
df$diff_oddi <-  df$`ODI Mes0` - df$`ODI Mes1` #calculo diff odi
df$diff_oddi <- log(df$diff_oddi) ## Uso Logaritmo para acercar las escalas
df$NHD <-  factor(df$NHD) ##convierto a factor la variabla NHD Variable ordinal
dfdiffodi <-  df[c(8,12)]
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2],
add = c("mean_ci","jitter"),
palette = "jco") +
ggtitle("Diagrama Error DiffOddi vs NHD")
df <- read_excel("espalda.xlsx")
df$diff_oddi <-  df$`ODI Mes0` - df$`ODI Mes1` #calculo diff odi
df$logdiff_oddi <- log(df$diff_oddi) ## Uso Logaritmo para acercar las escalas
df$NHD <-  factor(df$NHD) ##convierto a factor la variabla NHD Variable ordinal
dfdiffodi <-  df[c(8,12,13)]
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2],
add = c("mean_ci","jitter"),
palette = "jco") +
ggtitle("Diagrama Error DiffOddi vs NHD")
dfdiffodi <-  df[c(8,13)]
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2],
add = c("mean_ci","jitter"),
palette = "jco") +
ggtitle("Diagrama Error LOG DiffOddi vs NHD")
###Valido la Normalidad de diff_oddi
shapiro.test(df$diff_oddi)
qqplot(df$diff_oddi)
plot(df$diff_oddi)
hist(df$diff_oddi)
###Valido la Normalidad de diff_oddi
shapiro.test(df$diff_oddi)
mtcorSpearman <- rcorr(as.matrix(df[,12]),type = "spearman") ##Spearman
mtcorSpearman <- rcorr(as.matrix(df[,c(8,12)]),type = "spearman") ##Spearman
mtcorSpearman <- rcorr(as.matrix(dfdiffodi),type = "spearman") ##Spearman
packages = c("lme4","lmerTest", "FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
lapply(.packages, require, character.only=TRUE)
.packages = c("lme4","lmerTest", "FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
lapply(.packages, require, character.only=TRUE)
##
#USING PACKAGES FROM devtools not from CRAN
.packages = c("lme4","lmerTest", "FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
lapply(.packages, require, character.only=TRUE)
setwd("~/Analiza tus Datos/Etapa 2/Bloque 5 Analiza tus Datos/3. Relaciona Medidas de Correlacion")
df <- read_excel("espalda.xlsx")
df$diff_oddi <-  df$`ODI Mes0` - df$`ODI Mes1` #calculo diff odi
df$logdiff_oddi <- log(df$diff_oddi) ## Uso Logaritmo para acercar las escalas
df$NHD <-  factor(df$NHD) ##convierto a factor la variabla NHD Variable ordinal
##Diagrama de Error diff odi sin logaratimo
dfdiffodi <-  df[c(8,12)]
ggline(data=dfdiffodi,x=names(dfdiffodi)[1],y=names(dfdiffodi)[2],
add = c("mean_ci","jitter"),
palette = "jco") +
ggtitle("Diagrama Error DiffOddi vs NHD")
###Procedo a calcular el coefeciente de correlacion de spearman
###diffoddi vs NHD (ORDINAL)
dfdiffodi <-  df[c(8,13)]
mtcorSpearman <- rcorr(as.matrix(dfdiffodi),type = "spearman") ##Spearman
#********************************************************************
# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("Hmisc","lme4","lmerTest", "FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
lapply(.packages, require, character.only=TRUE)
mtcorSpearman <- rcorr(as.matrix(dfdiffodi),type = "spearman") ##Spearman
#Matriz de Correlacion y Pvalor  en forma de tabla "Spearman"
flattenCorrMatrix(mtcorSpearman$r,mtcorSpearman$P)
#Matriz de Correlacion y Pvalor  en forma de tabla "Spearman"
flattenCorrMatrix(mtcorSpearman$r,mtcorSpearman$P)
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
#Matriz de Correlacion y Pvalor  en forma de tabla "Spearman"
flattenCorrMatrix(mtcorSpearman$r,mtcorSpearman$P)
