# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("wordcloud2","FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
##
# Instala los paquetes sinÃ³ los tienes instalados
##
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinÃ³ los tienes cargados
lapply(.packages, require, character.only=TRUE)
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna"),
Cantidad   = c(30,15, 35,20,10))
View(df)
wordcloud2(df,size=1.6)
wordcloud2(df)
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
Cantidad   = c(30,15, 35,20,10,18))
wordcloud2(df)
wordcloud2(df,size=2.3)
wordcloud2(df,size=1)
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
Cantidad   = c(35,15, 35,20,10,18))
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-light', backgroundColor="black")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="black")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="black")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="black")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="gray")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="blue")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="lightblue")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-light', backgroundColor="lightblue")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-light', backgroundColor="lightblue")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-light', backgroundColor="lightblue")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-light', backgroundColor="lightblue")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-light', backgroundColor="brown")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="brown")
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
Cantidad   = c(35,15, 35,20,10,18))
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark', backgroundColor="brown")
wordcloud2(df,size=1, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark')
View(df)
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark')
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
"Cantidad"  = c(35,15, 35,20,10,18))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark')
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
"Cantidad"  = c(35,15, 50,20,10,18))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1,color='random-dark')
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
"Cantidad"  = c(35,15, 50,25,10,18))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento", "Repercusiones", "Desinterés","Solución Interna","Capacitacion"),
"Cantidad"  = c(35,15,50,25,10,18))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame("Palabra"  = c("Temor"),
"Cantidad"  = c(35))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("wordcloud2","FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinÃ³ los tienes cargados
lapply(.packages, require, character.only=TRUE)
df <-  data.frame("Palabra"  = c("Temor"),
"Cantidad"  = c(35))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento"),
"Cantidad"  = c(35,15))
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1
df <-  data.frame("Palabra"  = c("Temor","Desconocimiento"),
"Cantidad"  = c(35,15))
df <-  data.frame(Palabra  = c("Temor","Desconocimiento"),
Cantidad  = c(35,15)
)
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones"),
Cantidad  = c(35,15,15)
)
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,50,25,10,18)
)
wordcloud2(df, minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,50,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","jjjjjj","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,50,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","jjjjjj","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,14,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,14,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,45,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,27,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desc","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,27,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,27,25,10,18)
)
wordcloud2(df)
wordcloud2(df,size = 0.5)
df <-  data.frame(Palabra  = c("Temor","Deconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,27,25,10,18)
)
wordcloud2(df,size = 0.5)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,27,25,10,18)
)
wordcloud2(df,size = 0.5)
wordcloud2(df,size = 0.5)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,23,27,25,10,18)
)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,23,27,25,10,18)
)
wordcloud2(df,size = 0.5)
wordcloud2(df,size = 1)
wordcloud2(df,size = .80)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1.5)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,23,32,25,10,18)
)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
wordcloud2(df,size = .70,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(40,23,32,25,10,18)
)
wordcloud2(df,size = .70,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(40,23,32,40,10,18)
)
wordcloud2(df,size = .70,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
#********************************************************************
# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
##
# Instala los paquetes sinÃ³ los tienes instalados
##
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinÃ³ los tienes cargados
lapply(.packages, require, character.only=TRUE)
setwd("~/Analiza tus Datos")
setwd("~/Analiza tus Datos/Etapa 2/Bloque 5 Analiza tus Datos/2. Compara Medidas por Grupos/[AD]2.1_HT_Comprarmedida2grupos1medida1valor")
###
# Comprar una medida con un valor critico (caso de mejoria > 20)
###
setwd("~/Analiza tus Datos/Etapa 2/Bloque 5 Analiza tus Datos/2. Compara Medidas por Grupos/[AD]2.1_HT_Comprarmedida2grupos1medida1valor")
library(readxl)
df <- read_excel("espalda.xlsx")
View(df)
#abro archivo
df <- read_excel("espalda.xlsx")
df$diff_odi <-  df$`ODI Mes0` - df$`ODI Mes1`
mejoria
###
# Preparo datos, creo columnas, grupos etc
###
df$diffodi  <- df$`ODI Mes0` - df$`ODI Mes1` # agrego  variable con la mejoria
df$NHD[df$NHD > 0] <- 1 # si tiene mas de 1 hernia las hago todas 1 eso indica que tiene hernias
#creo factores
df$NHD <- factor(df$NHD,labels  = c("Sin Hernia","Con Hernia")) #Hernias
df$Grupo <- factor(df$Grupo,labels = c("Convencional","Experimental")) #Tipo de tratamiento
#DESCRIPCION DE VARIABLE ODIMES 0
dfvectodi0 <- pull(df,`ODI Mes0`) #Con pull convierto el tibble en VECTOR porque si no da error
hist(dfvectodi0,breaks = 20,freq = FALSE, main = "Distribución Frecuencia ODIMES 0",xlab = "Odimes 0",ylab = "Cantidad")
boxplot(dfvectodi0, main="Variable ODI MES 0")
library(car)
# qqplot paquete car
qqPlot(dfvectodi0,main="Variable ODI MES 0")
#DESCRIPCION DE VARIABLE ODIMES 1
dfvectodi1 <- pull(df,`ODI Mes1`) #Con pull convierto el tibble en VECTOR porque si no da error
hist(dfvectodi1,breaks = 20,freq = FALSE, main = "Distribución Frecuencia ODIMES 1",xlab = "Odimes 0",ylab = "Cantidad")
boxplot(dfvectodi1, main="Variable ODI MES 1")
library(car)
# qqplot paquete car
qqPlot(dfvectodi1,main="Variable ODI MES 1")
# Histograma de frecuencias, box plot y qqplot con plotly ODI MES 0
name1 = names(df)[9]
p1<-plot_ly(x = dfvectodi0 , type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
p1<-plot_ly(x = dfvectodi0 , type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
# Boxplot
p2<-plot_ly(y = dfvectodi0 , type = "box",name = name1,boxpoints = "all")%>%
layout(title = paste("Boxplot de",name1),yaxis = list(title = name1))
p3<-ggqqplot(df , x = name1,color = "#FF6666",add.params = list(color = "black"))+
xlab("Distribuci?n Te?rica Normal") + ylab("Cuartiles reales") +
theme_minimal() +
ggtitle(paste("QQ-plot de ", name1,sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
p <- subplot(p1, p2, p3)%>%
layout(title = paste("Histograma de Frecuencias Boxplot y QQplot para la variable  ", name1,sep = ""))
p
df$ftratamiento <-  factor(df$Grupo,labels = c("Converncional","Innovador"))
df$ftratamiento
#DESCRIPCION DE VARIABLE ODIMES 0
#dfvectodi0 <- pull(df,`ODI Mes0`) #Con pull convierto el tibble en VECTOR porque si no da error
hist(dfvectodi0,breaks = 20,freq = FALSE, main = "Distribución Frecuencia ODIMES 0",xlab = "Odimes 0",ylab = "Cantidad")
#DESCRIPCION DE VARIABLE ODIMES 0
#dfvectodi0 <- pull(df,`ODI Mes0`) #Con pull convierto el tibble en VECTOR porque si no da error
hist(df$`ODI Mes0`,breaks = 20,freq = FALSE, main = "Distribución Frecuencia ODIMES 0",xlab = "Odimes 0",ylab = "Cantidad")
#DESCRIPCION DE VARIABLE ODIMES 1
hist(df$`ODI Mes1`,breaks = 20,freq = FALSE, main = "Distribución Frecuencia ODIMES 1",xlab = "Odimes 0",ylab = "Cantidad")
boxplot(df$`ODI Mes0` main="Variable ODI MES 0")
boxplot(df$`ODI Mes0` ,main="Variable ODI MES 0")
boxplot(df$`ODI Mes1`, main="Variable ODI MES 1")
# qqplot paquete car
qqPlot(df$`ODI Mes0`,main="Variable ODI MES 0")
# qqplot paquete car
qqPlot(df$`ODI Mes1`,main="Variable ODI MES 1")
# Histograma de frecuencias, box plot y qqplot con plotly ODI MES 1
name1 = names(df)[11]
p1<-plot_ly(x = dfvectodi1 , type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
# Boxplot
p2<-plot_ly(y = dfvectodi1 , type = "box",name = name1,boxpoints = "all")%>%
layout(title = paste("Boxplot de",name1),yaxis = list(title = name1))
p1<-plot_ly(x = df$`ODI Mes0`, type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
p1<-plot_ly(x = df[,9] , type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
p1<-plot_ly(x = pull(df$`ODI Mes0`), type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
p1<-plot_ly(x = dfvectodi0 , type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
dfvectodi0 <- pull(df,`ODI Mes0`) #convierto a vector ya q tibble da error en plot_ly
name1 = names(df)[9]
p1<-plot_ly(x = dfvectodi0 , type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
# Boxplot
p2<-plot_ly(y = dfvectodi0 , type = "box",name = name1,boxpoints = "all")%>%
layout(title = paste("Boxplot de",name1),yaxis = list(title = name1))
p3<-ggqqplot(df , x = name1,color = "#FF6666",add.params = list(color = "black"))+
xlab("Distribuci?n Te?rica Normal") + ylab("Cuartiles reales") +
theme_minimal() +
ggtitle(paste("QQ-plot de ", name1,sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
p
# Histograma de frecuencias, box plot y qqplot con plotly ODI MES 1
name1 = names(df)[10]
dfvectodi1 <- pull(df,`ODI Mes1`) #Transformo a vector por que el tibble da problemas en el plotly
p1<-plot_ly(x =dfvector1, type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
p1<-plot_ly(x =dfvectodi1, type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
# Boxplot
p2<-plot_ly(y = dfvectodi1 , type = "box",name = name1,boxpoints = "all")%>%
layout(title = paste("Boxplot de",name1),yaxis = list(title = name1))
p3<-ggqqplot(df , x = name1,color = "#FF6666",add.params = list(color = "black"))+
xlab("Distribuci?n Te?rica Normal") + ylab("Cuartiles reales") +
theme_minimal() +
ggtitle(paste("QQ-plot de ", name1,sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
p <- subplot(p1, p2, p3)%>%
layout(title = paste("Histograma de Frecuencias Boxplot y QQplot para la variable  ", name1,sep = ""))
p
p1<-plot_ly(y =dfvectodi1,x=df$ftratamiento type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
p1<-plot_ly(y =dfvectodi1,x=df$ftratamiento, type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
# Boxplot
p2<-plot_ly(y = dfvectodi1 , type = "box",name = name1,boxpoints = "all")%>%
layout(title = paste("Boxplot de",name1),yaxis = list(title = name1))
p3<-ggqqplot(df , x = name1,color = "#FF6666",add.params = list(color = "black"))+
xlab("Distribuci?n Te?rica Normal") + ylab("Cuartiles reales") +
theme_minimal() +
ggtitle(paste("QQ-plot de ", name1,sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
p <- subplot(p1, p2, p3)%>%
layout(title = paste("Histograma de Frecuencias Boxplot y QQplot para la variable  ", name1,sep = ""))
p
# Boxplot
p2<-plot_ly(y = dfvectodi1, x=df$ftratamiento, type = "box",name = name1,boxpoints = "all")%>%
layout(title = paste("Boxplot de",name1),yaxis = list(title = name1))
p3<-ggqqplot(df ,y=iffodi,x = name1,color = "#FF6666",add.params = list(color = "black"))+
xlab("Distribuci?n Te?rica Normal") + ylab("Cuartiles reales") +
theme_minimal() +
ggtitle(paste("QQ-plot de ", name1,sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
# Boxplot
p2<-plot_ly(y = diffodi, x=df$ftratamiento, type = "box",name = name1,boxpoints = "all")%>%
layout(title = paste("Boxplot de",name1),yaxis = list(title = name1))
# Boxplot
p2<-plot_ly(y = diffodi, x=df$ftratamiento, type = "box",name = name1,boxpoints = "all")%>%
layout(title = paste("Boxplot de",name1),yaxis = list(title = name1))
p3<-ggqqplot(df ,y=diffodi,x = name1,color = "#FF6666",add.params = list(color = "black"))+
xlab("Distribuci?n Te?rica Normal") + ylab("Cuartiles reales") +
theme_minimal() +
ggtitle(paste("QQ-plot de ", name1,sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
# Boxplot
p2<-plot_ly(y = dfvectodi1, x=df$ftratamiento, type = "box",name = name1,boxpoints = "all")%>%
layout(title = paste("Boxplot de",name1),yaxis = list(title = name1))
p3<-ggqqplot(df ,y=dfvectodi1,x = name1,color = "#FF6666",add.params = list(color = "black"))+
xlab("Distribuci?n Te?rica Normal") + ylab("Cuartiles reales") +
theme_minimal() +
ggtitle(paste("QQ-plot de ", name1,sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
p3 <- ggplotly(p3)
p <- subplot(p1, p2, p3)%>%
layout(title = paste("Histograma de Frecuencias Boxplot y QQplot para la variable  ", name1,sep = ""))
p
p1<-plot_ly(y =dfvectodi1,x=df$ftratamiento, type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
p
p1
p1<-plot_ly(y =dfvectodi1,color=df$ftratamiento, type = "histogram",name = name1,marker=list(color='#FF6666'))%>%
layout(title = paste("Histograma de Frecuencias de",name1),yaxis = list(title = name1),bargap=0.005*(max(df[,name1])-min(df[,name1])))
p1
dfvectdiff <- pull(df,diffodi) #Transformo a vector por que el tibble da problemas en el plotly
p1 <- plot_ly() %>%
add_trace(data=df,
y=dfvectdiff,
color=~ftratamiento,
type="box")
p1
p1 <- plot_ly() %>%
add_trace(data=df,
y=dfvectdiff,
color=~ftratamiento,
type="histogram")
p1
p1 <- plot_ly() %>%
add_trace(data=df,
y=dfvectdiff,
color=~ftratamiento,
type="density")
p1
p1
p1 <- plot_ly() %>%
add_trace(data=df,
y=dfvectdiff,
color=~ftratamiento,
type="histogram2dcontour")
p1
p1 <- ggplot(df, aes(x = dfvectdiff, colour = ftratamiento)) + geom_density() + geom_rug();
p1
p1 <- ggplot(df, aes(x = dfvectdiff, colour = ftratamiento))
p1
p1 <- ggplot(df, aes(y = dfvectdiff, x=ftratamiento))
p1
p1 <- ggplot(df, aes(y = dfvectdiff, x=ftratamiento)) +
geom_histogram()
p1
p1 <- ggplot(df) +
geom_histogram( aes(y = dfvectdiff, x=ftratamiento))
p1
p1 <- ggplot(df, aes(x = dfvectdiff, colour = ftratamiento)) +
geom_density() +
geom_rug();
p1
p1 <- ggplot(df, aes(x = dfvectdiff, colour = ftratamiento)) +
geom_density() +
geom_histogram(aes(y = ..density.., fill = ftratamiento), alpha = 0.2, bins = 50)
p1
geom_histogram(aes(y = ..density.., fill = ftratamiento), alpha = 0.2, bins = 50)
p1 <- ggplot(df, aes(x = dfvectdiff, colour = ftratamiento)) +
geom_histogram(aes(y = ..density.., fill = ftratamiento), alpha = 0.2, bins = 50)
p1
p1 <- ggplot(df, aes(x = dfvectdiff, colour = ftratamiento)) +
geom_density() + geom_rug() +
geom_histogram(aes(y = ..density.., fill = ftratamiento), alpha = 0.2, bins = 50)
p1
p1 <- ggplot(df, aes(x = dfvectdiff, colour = ftratamiento)) +
geom_density() + geom_rug() +
geom_histogram(aes(y = dfvectdiff, fill = ftratamiento), alpha = 0.2, bins = 50)
p1
rlang::last_error()
p1 <- ggplot(df) +
geom_density() + geom_rug() +
geom_histogram(aes(y = dfvectdiff, color = ftratamiento), alpha = 0.2, bins = 50)
p1
color
p1 <- ggplot(df, aes(x = dfvectdiff, colour = ftratamiento)) +
geom_density() + geom_rug() +
geom_histogram(aes(y = dfvectdiff, color = ftratamiento), alpha = 0.2, bins = 50)
p1
p1 <- ggplot(df, aes(x = dfvectdiff, colour = ftratamiento)) +
geom_density() + geom_rug() +
geom_histogram(aes(y = ..density.., fill = ftratamiento), alpha = 0.2, bins = 50)
p1
p1 <- plot_ly(df, aes(x = dfvectdiff, colour = ftratamiento)) +
geom_density() + geom_rug() +
geom_histogram(aes(y = ..density.., fill = ftratamiento), alpha = 0.2, bins = 50)
p1
p1
p2 <- plot_ly(y=dfvectdiff,x=df[,14],type = 'box',name=name1,boxpoints="all")
p2
p2 <- plot_ly(y=dfvectdiff,x=df$ftratamiento,type = 'box',name=name1,boxpoints="all")
p2
p2 <- plot_ly(y=dfvectdiff,x=df$ftratamiento,type = 'box',name=name1,boxpoints="all", color = df$ftratamiento)
p2
p2 <- plot_ly(y=dfvectdiff,x=df$ftratamiento,type = 'box',name=name1,boxpoints="all", color = df$ftratamiento) %>%
layout(title = paste(" Boxplot  para la variable  ", name1,"en relacion al tipo",name2,sep = ""))
name2 = "Tratamiento"
p2 <- plot_ly(y=dfvectdiff,x=df$ftratamiento,type = 'box',name=name1,boxpoints="all", color = df$ftratamiento) %>%
layout(title = paste(" Boxplot  para la variable  ", name1,"en relacion al tipo",name2,sep = ""))
p2
p3 <- plot_ly(y=dfvectdiff,x=df$ftratamiento,type = 'bk',name=name1,boxpoints="all", color = df$ftratamiento) %>%
layout(title = paste(" Boxplot  para la variable  ", name1,"en relacion al tipo",name2,sep = ""))
p3
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel"){
dfsumarize <- Datos %>%
group_by(get(agrupapor)) %>%
summarise(
sd = sd(get(columna),na.rm = TRUE),
media = mean(get(columna)))
#####
#  Creo grafico de errores o de medias
####
ggplot(dfsumarize, aes(x=reorder(`get(agrupapor)`,media), y=media,color=`get(agrupapor)`)) +
geom_line(aes(group = 1)) +
geom_errorbar( aes(ymin=media-sd,ymax=media + sd),width = 0.2) +
geom_point(size = 2) +
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
p3 <- crea_errdiagram(df,"diffodi","ftratamiento","Diagrama de Error Mejoria por Tratamiento", "Tratmiento","Mejoria")
p3
