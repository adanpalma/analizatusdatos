df <-  data.frame(Palabra  = c("Temor","Desconocimiento","jjjjjj","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,50,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","jjjjjj","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,14,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,14,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,45,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,27,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Desc","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,15,27,25,10,18)
)
wordcloud2(df)
df <-  data.frame(Palabra  = c("Temor","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,27,25,10,18)
)
wordcloud2(df)
wordcloud2(df,size = 0.5)
df <-  data.frame(Palabra  = c("Temor","Deconocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,27,25,10,18)
)
wordcloud2(df,size = 0.5)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,27,25,10,18)
)
wordcloud2(df,size = 0.5)
wordcloud2(df,size = 0.5)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,23,27,25,10,18)
)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,23,27,25,10,18)
)
wordcloud2(df,size = 0.5)
wordcloud2(df,size = 1)
wordcloud2(df,size = .80)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = 1.5)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(35,23,32,25,10,18)
)
wordcloud2(df,size = .80,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
wordcloud2(df,size = .70,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(40,23,32,25,10,18)
)
wordcloud2(df,size = .70,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
df <-  data.frame(Palabra  = c("Temor","Conocimiento","Repercusiones","Desinterés","Solución Interna","Capacitacion"),
Cantidad  = c(40,23,32,40,10,18)
)
wordcloud2(df,size = .70,minRotation = -pi/6, maxRotation = -pi/6, rotateRatio = .75)
L3 <- LETTERS[1:3]
fac <- sample(L3, 10, replace = TRUE)
View(df)
View(df)
L3 <- LETTERS[1:3]
fac <- sample(L3, 10, replace = TRUE)
(d <- data.frame(x = 1, y = 1:10, fac = fac))
## The "same" with automatic column names:
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
LETTERS
LETTERS[1]
LETTERS[1:3]
sample(LETTERS)
sample(LETTERS,1)
sample(LETTERS,10)
sample(LETTERS,10)
L3 <- LETTERS[1:3]
fac <- sample(L3, 10, replace = TRUE)
data.frame(x = 1, y = 1:10, fac = fac)
data.frame(x = 1, y = 1:10, fac = fac)
d <- data.frame(sexoraton = c("MACHOS","HEMBRAS"), CANCERESPONTANEO = c(95,65))
d
d
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(d$sexoraton,d$CANCERESPONTANEO)
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(d$CANCERESPONTANEO)
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(d$CANCERESPONTANEO,sum(d$CANCERESPONTANEO),p=0.5,correct = FALSE)
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(d$CANCERESPONTANEO[1],sum(d$CANCERESPONTANEO),p=0.5,correct = FALSE)
#####
dfmouses <- data.frame(sexoraton = c("MACHOS","HEMBRAS"), CANCERESPONTANEO = c(95,65))
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(table(dfmouses$sexoraton,dfmouses$CANCERESPONTANEO),correct = FALSE)
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(table(dfmouses$sexoraton,dfmouses$CANCERESPONTANEO),n=c(0.50,0.50),correct = FALSE)
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(table(dfmouses$sexoraton,dfmouses$CANCERESPONTANEO),n=c(0.50,0.50),correct = FALSE)
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(table(dfmouses$sexoraton,dfmouses$CANCERESPONTANEO),n=sum(dfmouses$CANCERESPONTANEO),p=0.5,correct = FALSE)
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(table(dfmouses$sexoraton,dfmouses$CANCERESPONTANEO),n=sum(dfmouses$CANCERESPONTANEO),p=0.5,correct = FALSE)
sum(dfmouses$CANCERESPONTANEO)
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(table(dfmouses$sexoraton,dfmouses$CANCERESPONTANEO),n=c(sum(dfmouses$CANCERESPONTANEO),sum(dfmouses$CANCERESPONTANEO)),p=0.5,correct = FALSE)
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(table(dfmouses$CANCERESPONTANEO),n=sum(dfmouses$CANCERESPONTANEO),p=0.5,correct = FALSE)
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(95,n=160,p=0.5,correct = FALSE)
##Busco ver si las probabilidades de Machos y Hembas son iguales o distintas
prop.test(95,n=160,p=0.5,correct = FALSE)
##Busco ver si las probabilidades de Machos de cancer espontaneo son > 5%
prop.test(95,n=160,p=0.5,correct = FALSE,alternative="greater")
##Busco ver si las probabilidades de Machos de cancer espontaneo son > 5%
prop.test(95,n=160,p=0.7,correct = FALSE,alternative="greater")
##Busco ver si las probabilidades de Machos de cancer espontaneo son > 5%
prop.test(95,n=160,p=1,correct = FALSE,alternative="greater")
##Busco ver si las probabilidades de Machos de cancer espontaneo son > 5%
prop.test(95,n=160,p=0.99,correct = FALSE,alternative="greater")
prop.test(95,n=160,p=0.5,correct = FALSE,alternative="less")
##Busco ver si las probabilidades de Machos de cancer espontaneo son > 5%
prop.test(x=95,n=160,p=0.5,correct = FALSE,alternative="greater")
prop.test(x=95,n=160,p=0.5,correct = FALSE,alternative="less")
##Busco ver si las probabilidades de Machos  son iguales o distintas
prop.test(x=c(95,65),n=c(160,160),p=0.5,correct = FALSE)
##Busco ver si las probabilidades de Machos  son iguales o distintas
prop.test(x=c(95,65),n=c(160,160),correct = FALSE)
##Busco ver si las probabilidades de Machos  son iguales o distintas
prop.test(x=c(95),n=c(160),p=0.5,correct = FALSE)
##Busco ver si las probabilidades de Machos  son iguales o distintas
prop.test(x=c(95),n=c(160),p=0.5,correct = FALSE)
##Busco ver si las probabilidades de Machos de cancer espontaneo son > 5%
prop.test(x=95,n=160,p=0.5,correct = FALSE,alternative="greater")
##Busco ver si las probabilidades de Machos de cancer espontaneo son > 5%
prop.test(x=95,n=160,p=0.1,correct = FALSE,alternative="greater")
##Busco ver si las probabilidades de Machos de cancer espontaneo son > 5%
prop.test(x=95,n=160,p=0.8,correct = FALSE,alternative="greater")
##Busco ver si las probabilidades de Machos de cancer espontaneo son > 5%
prop.test(x=95,n=160,p=0.5,correct = FALSE,alternative="greater")
#Busco ver si las probabilidades de Machos  son iguales o distintas
prop.test(x=c(95,65),n=c(160,160),correct = FALSE)
##Busco ver si las probabilidades de Machos SEA mayor que las Hembras
prop.test(x=c(95,65), n=c(160,160),correct=FALSE, alternative ="greater")
##Busco ver si las probabilidades de Machos SEA MENOR que las Hembras
prop.test(x=c(95,65), n=c(160,160),correct=FALSE, alternative ="less")
.packages = c("foreing","Hmisc","lme4","lmerTest", "FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
lapply(.packages, require, character.only=TRUE)
system("java -version")
system("java -version")
system("java -version")
.packages = c("foreing","Hmisc","lme4","lmerTest", "FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
lapply(.packages, require, character.only=TRUE)
####
# Cargo la data en formato SPSS y la conveirto a Data Frame\
# SPSS
####
library(foreign)
df <- read_xlsx(file.choose())
setwd("~/Analiza tus Datos/Etapa 2/Bloque 5 Analiza tus Datos/5. Relacion de Proporciones")
setwd("~/Analiza tus Datos/Etapa 2/Bloque 5 Analiza tus Datos/5. Relacion de Proporciones")
df <- read_xlsx(file.choose())
head(df0)
head(df)
View(df)
df <- read.spss("datos-espalada.sav",to.data.frame = TRUE)
setwd("~/Analiza tus Datos/Etapa 2/Bloque 5 Analiza tus Datos/5. Relacion de Proporciones")
df <- read.spss("datos-espalada.sav",to.data.frame = TRUE)
setwd("~/Analiza tus Datos/Etapa 2/Bloque 5 Analiza tus Datos/5. Relacion de Proporciones")
df <- read.spss("datos-espalada.sav",to.data.frame = TRUE)
df <- read.spss("~/datos-espalada.sav",to.data.frame = TRUE)
df <- read.spss(file.choose(),to.data.frame = TRUE)
View(df)
##Selecciono las columnas para trabajar
df <- df[,c("Grupo","NHD","LF_Mes1")]
df
df <- read.spss(file.choose(),to.data.frame = TRUE)
View(df)
##Selecciono las columnas para trabajar
df <- df[,c("Grupo","NHD","LF_Mes1")]
#CALCULAR EL TEST DE CHI CUADRADO PEARSON SIN CORRECION (PARA SABER SI HAY RELACION)
chisq <- chisq.test(as.vector(df[,3]), as.vector(df[,1]), correct = FALSE )
chisq
#CALCULAR EL TEST DE CHI CUADRADO PEARSON SIN CORRECION (PARA SABER SI HAY RELACION)
chisq <- chisq.test(as.vector(df[,3]), as.vector(df[,1]), correct = FALSE ) # Sin correcion
#CALCULAR EL TEST DE CHI CUADRADO PEARSON SIN CORRECION (PARA SABER SI HAY RELACION)
chisq <- chisq.test(as.vector(df[,3]), as.vector(df[,1]), correct = FALSE ) # Sin correcion
chisq
#CALCULAR EL TEST DE CHI CUADRADO PEARSON CON CORRECION DE YATES (PARA SABER SI HAY RELACION)
chisq <- chisq.test(as.vector(df[,3]), as.vector(df[,1]), correct = TRUE ) # Sin correcion
chisq
fisher.test(as.vector(df[,3]), as.vector(df[,1]))
##Como el chi cuadrado de perason da warnig uso el Fisher.test PUES pouede que no haya normalidad
fisher.test(as.vector(df[,3]), as.vector(df[,1]))
#CALCULAR EL TEST DE CHI CUADRADO PEARSON SIN CORRECION (PARA SABER SI HAY RELACION)
chisq <- chisq.test(as.vector(df[,3]), as.vector(df[,2]), correct = FALSE ) # Sin correcion
chisq
#CALCULAR EL TEST DE CHI CUADRADO PEARSON CON CORRECION DE YATES (PARA SABER SI HAY RELACION)
chisq <- chisq.test(as.vector(df[,3]), as.vector(df[,2]), correct = TRUE ) # Sin correcion
chisq
##Como el chi cuadrado de perason da warnig uso el Fisher.test PUES pouede que no haya normalidad
fisher.test(as.vector(df[,3]), as.vector(df[,2]))
tconti = table(df[,3],table[,2])
tconti = table(df$LF_Mes1,df$NHD)
tconti
tconti = as.matrix(table(df$LF_Mes1,df$NHD))
tconti
tconti = table(df$LF_Mes1,df$NHD)
tconti
#CREO LA TABLA DE CONTINGENCIAS
tconti = table(df$LF_Mes1,df$NHD)
tconti
#CREO LA TABLA DE CONTINGENCIAS
tconti = as.data.frame(table(df$LF_Mes1,df$NHD))
#CREO LA TABLA DE CONTINGENCIAS
tconti = as.data.frame(table(df$LF_Mes1,df$NHD))
tconti
View(tconti)
#CREO LA TABLA DE CONTINGENCIAS
tconti = as.matrix(as.data.frame(table(df$LF_Mes1,df$NHD)))
tconti
View(tconti)
#CREO LA TABLA DE CONTINGENCIAS
tconti = as.matrix(as.data.frame(table(df$LF_Mes1,df$NHD)))
tconti
#CREO LA TABLA DE CONTINGENCIAS
tconti = as.data.frame(table(df$LF_Mes1,df$NHD))
#CREO LA TABLA DE CONTINGENCIAS
tconti = as.data.frame(table(df$LF_Mes1,df$NHD))
tconti
#CREO LA TABLA DE CONTINGENCIAS
tconti =table(df$LF_Mes1,df$NHD)
tconti
p2 <- ggplot(df,aes(df[,name1], df[,name2]))+
geom_bar(aes(fill=df[,name2]),position = "dodge")
p2
name1 <- names(df)[3]
name2 <- names(df)[2]
p2 <- ggplot(df,aes(df[,name1], df[,name2]))+
geom_bar(aes(fill=df[,name2]),position = "dodge")
p2
# Creo Diagrama de Barras apreciar mejor la tabla de contingencias
name1 <- names(df)[3]
name2 <- names(df)[2]
p2 <- ggplot(df,aes(df[,name1], ..count..))+
geom_bar(aes(fill=df[,name2]),position = "dodge")
p2
# Creo Diagrama de Barras apreciar mejor la tabla de contingencias
name1 <- names(df)[3]
name2 <- names(df)[2]
p2 <- ggplot(df,aes(df[,name1], ..count..))+
geom_bar(aes(fill=df[,name2]),position = "dodge")+
ggtitle("Diagrama de Barra NHD y LFMes1")+
xlab("Tipo de Discapcidad") + ylab("Frecuencia Absoluta")
p2
df <- read.spss(file.choose(),to.data.frame = TRUE) # Leo el archivo en formato spss
View(df)
##Selecciono las columnas para trabajar
df <- df[df$Grupo == "Estándard",c("Grupo","NHD","LF_Mes1")]
View(df)
df <- read.spss(file.choose(),to.data.frame = TRUE) # Leo el archivo en formato spss
View(df)
df[df$Grupo == "Estándar",c("Grupo","NHD","LF_Mes1")]
##Selecciono las columnas para trabajar
df <- df[df$Grupo == "Estándar",c("Grupo","NHD","LF_Mes1")]
# Creo Diagrama de Barras apreciar mejor la tabla de contingencias
name1 <- names(df)[3]
name2 <- names(df)[2]
p2 <- ggplot(df,aes(df[,name1], ..count..))+
geom_bar(aes(fill=df[,name2]),position = "dodge")+
ggtitle("Diagrama de Barra NHD y LFMes1")+
xlab("Tipo de Discapcidad") + ylab("Frecuencia Absoluta")
p2
df <- read.spss(file.choose(),to.data.frame = TRUE) # Leo el archivo en formato spss
##Selecciono las columnas para trabajar separadas por grupos de tratamientos
dfgest <- df[df$Grupo == "Estándar",c("Grupo","NHD","LF_Mes1")]
dfginv <- df[df$Grupo == "Investigación",c("Grupo","NHD","LF_Mes1")]
#CREO LA TABLA DE CONTINGENCIAS PARA TRATAMIENTO ESTANDARD
tconti =table(dfgest$LF_Mes1,df$NHD)
tconti
#CREO LA TABLA DE CONTINGENCIAS PARA TRATAMIENTO INVESTIGACION
tconti =table(dfginv$LF_Mes1,df$NHD)
tconti
#CREO LA TABLA DE CONTINGENCIAS PARA TRATAMIENTO ESTANDARD
tconti =table(dfgest$LF_Mes1,dfgest$NHD)
tconti
#CREO LA TABLA DE CONTINGENCIAS PARA TRATAMIENTO INVESTIGACION
tconti =table(dfginv$LF_Mes1,dfginv$NHD)
tconti
#CALCULAR EL TEST DE CHI CUADRADO PEARSON SIN CORRECION (PARA SABER SI HAY RELACION)
#grupo tratamiento estandar
chisq <- chisq.test(as.vector(dfgest[,3]), as.vector(dfgest[,2]), correct = FALSE ) # Sin correcion
chisq
#CALCULAR EL TEST DE CHI CUADRADO PEARSON SIN CORRECION (PARA SABER SI HAY RELACION)
#grupo tratamiento estandar
chisq <- chisq.test(as.vector(dfgest[,3]), as.vector(dfgest[,2]), correct = TRUE ) # Sin correcion
chisq
fisher.test(as.vector(dfgest[,3]), as.vector(dfgest[,2]), correct = TRUE)
fisher.test(as.vector(dfgest[,3]), as.vector(dfgest[,2]))
levene.test(dfgest[,3])
leveneTest(dfgest[,3])
ks.test(dfgest[,3])
#CALCULAR EL TEST DE CHI CUADRADO PEARSON SIN CORRECION (PARA SABER SI HAY RELACION)
#grupo tratamiento estandar
chisq <- chisq.test(as.vector(dfgest[,3]), as.vector(dfgest[,2]), correct = FALSE ) # Sin correcion
chisq
#CALCULAR EL TEST DE CHI CUADRADO PEARSON SIN CORRECION (PARA SABER SI HAY RELACION)
#grupo tratamiento estandar
chisq <- chisq.test(as.vector(dfgest[,3]), as.vector(dfgest[,2]), correct = FALSE,simulate.p.value = TRUE ) # Sin correcion
chisq
#CALCULAR EL TEST DE CHI CUADRADO PEARSON SIN CORRECION (PARA SABER SI HAY RELACION)
#grupo tratamiento estandar SE LE PIDE SIMULAR EL P-VALOR ya que hay muy pocos valores y da warnigs
chisq <- chisq.test(as.vector(dfgest[,3]), as.vector(dfgest[,2]), correct = FALSE,simulate.p.value = TRUE ) # Sin correcion
chisq
#CALCULAR EL TEST DE CHI CUADRADO PEARSON SIN CORRECION  (PARA SABER SI HAY RELACION)
#grupo tratamiento INVESTIGACION SE LE PIDE SIMULAR EL P-VALOR ya que hay muy pocos valores y da warnigs
chisq <- chisq.test(as.vector(dfginv[,3]), as.vector(dfginv[,2]), correct = FALSE, simulate.p.value = TRUE) # Sin correcion
chisq
#CREO LA TABLA DE CONTINGENCIAS PARA TRATAMIENTO ESTANDARD
tconti =table(dfgest$LF_Mes1,dfgest$NHD)
tconti
# Creo Diagrama de Barras apreciar mejor la tabla de contingencias por Grupo Tratamiento
#Grupo Estandard
name1 <- names(dfgest)[3]
name2 <- names(dfgest)[2]
p2 <- ggplot(dfgest,aes(dfgest[,name1], ..count..))+
geom_bar(aes(fill=dfgest[,name2]),position = "dodge")+
ggtitle("Diagrama de Barra NHD y LFMes1 Grupo Estandar")+
xlab("Tipo de Discapcidad") + ylab("Frecuencia Absoluta")
p2
#CREO LA TABLA DE CONTINGENCIAS PARA TRATAMIENTO INVESTIGACION
tconti =table(dfginv$LF_Mes1,dfginv$NHD)
tconti
Creo Diagrama de Barras apreciar mejor la tabla de contingencias por Grupo Tratamiento
#Grupo Investigacion
name1 <- names(dfginv)[3]
name2 <- names(dfginv)[2]
p2 <- ggplot(dfgest,aes(dfginv[,name1], ..count..))+
geom_bar(aes(fill=dfginv[,name2]),position = "dodge")+
ggtitle("Diagrama de Barra NHD y LFMes1 Grupo Estandar")+
xlab("Tipo de Discapcidad") + ylab("Frecuencia Absoluta")
p2
# Creo Diagrama de Barras apreciar mejor la tabla de contingencias por Grupo Tratamiento
#Grupo Investigacion
name1 <- names(dfginv)[3]
name2 <- names(dfginv)[2]
p2 <- ggplot(dfgest,aes(dfginv[,name1], ..count..))+
geom_bar(aes(fill=dfginv[,name2]),position = "dodge")+
ggtitle("Diagrama de Barra NHD y LFMes1 Grupo Estandar")+
xlab("Tipo de Discapcidad") + ylab("Frecuencia Absoluta")
p2
#CREO LA TABLA DE CONTINGENCIAS PARA TRATAMIENTO INVESTIGACION
tconti =table(dfginv$LF_Mes1,dfginv$NHD)
tconti
# Creo Diagrama de Barras apreciar mejor la tabla de contingencias por Grupo Tratamiento
#Grupo Investigacion
name1 <- names(dfginv)[3]
name2 <- names(dfginv)[2]
p2 <- ggplot(dfginv,aes(dfginv[,name1], ..count..))+
geom_bar(aes(fill=dfginv[,name2]),position = "dodge")+
ggtitle("Diagrama de Barra NHD y LFMes1 Grupo Estandar")+
xlab("Tipo de Discapcidad") + ylab("Frecuencia Absoluta")
p2
# Creo Diagrama de Barras apreciar mejor la tabla de contingencias por Grupo Tratamiento
#Grupo Investigacion
name1 <- names(dfginv)[3]
name2 <- names(dfginv)[2]
p2 <- ggplot(dfginv,aes(dfginv[,name1], ..count..))+
geom_bar(aes(fill=dfginv[,name2]),position = "dodge")+
ggtitle("Diagrama de Barra NHD y LFMes1 Grupo Investigacion")+
xlab("Tipo de Discapcidad") + ylab("Frecuencia Absoluta")
p2
View(dfmouses)
#CREO LA TABLA DE CONTINGENCIAS PARA TRATAMIENTO ESTANDARD
tcontiest =table(dfgest$LF_Mes1,dfgest$NHD)
tcontiest
#CREO LA TABLA DE CONTINGENCIAS PARA TRATAMIENTO INVESTIGACION
tcontiinv =table(dfginv$LF_Mes1,dfginv$NHD)
tcontiinv
###Antes proceo a converti la tabla de contingencias en MATRICES
matgest <- as.data.frame.matrix(tcontiest)
matginv <- as.data.frame.matrix(tcontiinv)
#CREO LA TABLA DE CONTINGENCIAS PARA TRATAMIENTO INVESTIGACION
tcontiinv =table(dfginv$LF_Mes1,dfginv$NHD)
tcontiinv
#CREO LA TABLA DE CONTINGENCIAS PARA TRATAMIENTO ESTANDARD
tcontiest =table(dfgest$LF_Mes1,dfgest$NHD)
tcontiest
###Antes proceo a converti la tabla de contingencias en MATRICES
matgest <- as.data.frame.matrix(tcontiest) #matrix estandard
View(matgest)
# Lista de paquetes de funciones a instalar
.packages = c("gplots","corrplot" ,"foreign","Hmisc","lme4","lmerTest", "FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
##Muestro una grafica llamada BALLONPLOT que muestra las relaciones
## de los grupos como una tabla de contingencias pero usando graficos
balloonplot(tcontiest,main="Grupo Estandard LF1 vs NHD")
.packages = c("gplots","corrplot" ,"foreign","Hmisc","lme4","lmerTest", "FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
##Muestro una grafica llamada BALLONPLOT que muestra las relaciones
## de los grupos como una tabla de contingencias pero usando graficos
balloonplot(tcontiest,main="Grupo Estandard LF1 vs NHD")
##Muestro una grafica llamada BALLONPLOT que muestra las relaciones
## de los grupos como una tabla de contingencias pero usando graficos
balloonplot(tcontiest,main="Grupo Estandard LF1 vs NHD")
##Muestro una grafica llamada BALLONPLOT que muestra las relaciones
## de los grupos como una tabla de contingencias pero usando graficos
balloonplot(t(tcontiest),main="Grupo Estandard LF1 vs NHD")
##Muestro una grafica llamada BALLONPLOT que muestra las relaciones
## de los grupos como una tabla de contingencias pero usando graficos
ggballoonplot(matgest,main="Grupo Estandard LF1 vs NHD")
ggballoonplot(matinv,main="Grupo Estandard LF1 vs NHD")
ggballoonplot(matginv,main="Grupo Estandard LF1 vs NHD")
ggballoonplot(matgest,main="Grupo Estandard LF1 vs NHD")
ggballoonplot(matginv,main="Grupo Investigacion LF1 vs NHD")
chisqgest <- chisq.test(as.vector(dfgest[,3]), as.vector(dfgest[,2]), correct = FALSE,simulate.p.value = TRUE ) # Sin correcion
chisqgest
chisqginv <- chisq.test(as.vector(dfginv[,3]), as.vector(dfginv[,2]), correct = FALSE, simulate.p.value = TRUE) # Sin correcion
chisqginv
View(chisqgest)
chisqgest[["residuals"]]
chisqgest[["residuals"]]
as.data.frame.matix(chisqgest[["residuals"]])
as.data.frame.matrix(chisqgest[["residuals"]])
chisqgest$observed
chisqginv # Valores esperados del grupo Investigacion
chisqginv$observed # Valores esperados del grupo Investigacion
as.data.frame(chisqgest$observed )# Valores esperados del grupo Estandard
as.matrix(as.data.frame(chisqgest$observed ))# Valores esperados del grupo Estandard
as.data.frame.matrix(chisqgest$observed )# Valores esperados del grupo Estandard
chisqgest$observed# Valores esperados del grupo Estandard
#CALCULO DE LOS VALROES OBSERVADOR
chisqgest$observed# Valores OBSERVADOS del grupo Estandard
#CALCULO DE LOS VALROES OBSERVADOS
chisqgest$observed# Valores OBSERVADOS del grupo Estandard
#CALCULO DE LOS VALROES OBSERVADOS
chisqginv$observed # Valores OBSERVADO
#VALORES ESPERADOS
chisqgest$expected #Valores Esperados Grupo Estandard
#VALORES ESPERADOS
chisqginv$expected #Valores Esperados Grupo Investigacion
#VALROES OBSERVADOS
round(chisqgest$observed,2)# Valores OBSERVADOS del grupo Estandard
#VALORES ESPERADOS
round(chisqgest$expected,2)#Valores Esperados Grupo Estandard
#VALORES ESPERADOS
round(chisqgest$expected,2)#Valores Esperados Grupo Estandard
#RESIDUOS
round(chisqgest$residuals,2) # Grupo Estandard
ggballoonplot(as.matrix(chisqgest))
ggballoonplot((chisqgest))
ggballoonplot(as.data.frame(chisqgest))
ggballoonplot(as.data.frame.matrix(chisqgest))
ggballoonplot(as.data.frame.matrix(chisqgest))
corrplot(chisqgest$residuals,isCorrelation=FALSE)
corrplot(as.data.frame.matrix(table(chisqgest$residuals)),isCorrelation=FALSE)
ggballoonplot(as.data.frame.matrix(table(chisqgest$residuals)),isCorrelation=FALSE)
#RESIDUOS
round(chisqgest$residuals,2) # Grupo Estandard
corrplot(chisqgest$residuals,is.cor=FALSE)
.packages = c("gplots","corrplot" ,"foreign","Hmisc","lme4","lmerTest", "FSA","car","plotly","ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr","PerformanceAnalytics")
.packages %in% installed.packages()
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
library(corrplot)
corrplot(chisqgest$residuals,is.cor=FALSE)
library(corrplot)
corrplot(chisqgest$residuals,is.cor=FALSE)
# VALROES OBSERVADOS
chisqginv$observed # Valores OBSERVADOS del grupo Investigacion
#VALORES ESPERADOS
round(chisqginv$expected,2) #Valores Esperados Grupo Investigacion
#Residuos
round(chisqginv$residuals,0) #Grupo Investigacion
corrplot(chisqginv$residuals, is.corr = FALSE)
corrplot(chisqginv$residuals, is.corr = FALSE, main="aaa")
corrplot(chisqginv$residuals, is.corr = FALSE, main="Residuos Grupo Investigacion")
chisqgest$statistic
contri_gesta <-  100* chisqgest$residuals^2/chisqgest$statistic
round(contri_gesta,3)
corrplot(contri_gesta,is.corr = FALSE)
#GRUPO ESTANDARD
contri_gesta <-  100* chisqgest$residuals^2/chisqgest$statistic
round(contri_gesta,3)
corrplot(contri_gesta,is.corr = FALSE)
#CALCULO DE LA CONTIBUCION DE CADA CELDA PARA LOS GRUPOS
#GRUPO ESTANDARD
contri_gesta <-  100* chisqgest$residuals^2/chisqgest$statistic
round(contri_gesta,3)
corrplot(contri_gesta,is.corr = FALSE)
#GRUPO INVESTIGACION
contri_inv <-  100 * chisqginv$residuals^2/chisqginv$statistic
#CALCULO DE LA CONTIBUCION DE CADA CELDA PARA LOS GRUPOS
#GRUPO INVESTIGACION
contri_inv <-  100 * chisqginv$residuals^2/chisqginv$statistic
round(contri_inv,3)
corrplot(contri_inv,is.corr = FALSE)
