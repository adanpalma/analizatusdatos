dfsumarize <- Datos %>%
group_by(get(agrupapor),get(var_color)) %>%
summarise(sderr = sd(get(columna),na.rm = TRUE)/sqrt(n()),
media = mean(get(columna)))
pd <- position_dodge(0.5) #Es para que las barras de error no se overlapen y se espacien horizontalmente
ggplot(dfsumarize, aes(x=`get(agrupapor)`, y=media,color=`get(var_color)`)) +
geom_errorbar( aes(ymin=media-1.96*sderr,ymax=media + 1.96*sderr),width = 0.2,position =pd) +
geom_point(position=pd)+
geom_line(position = pd)+
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel",var_color ="NA"){
dfsumarize <- Datos %>%
group_by(get(agrupapor),get(var_color)) %>%
summarise(sderr = sd(get(columna),na.rm = TRUE)/sqrt(n()),
media = mean(get(columna)))
pd <- position_dodge(0.5) #Es para que las barras de error no se overlapen y se espacien horizontalmente
ggplot(dfsumarize, aes(x=`get(agrupapor)`, y=media,color=`get(var_color)`,group=1)) +
geom_errorbar( aes(ymin=media-1.96*sderr,ymax=media + 1.96*sderr),width = 0.2,position =pd) +
geom_point(position=pd)+
geom_line(position = pd)+
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel",var_color ="NA"){
dfsumarize <- Datos %>%
group_by(get(agrupapor),get(var_color)) %>%
summarise(sderr = sd(get(columna),na.rm = TRUE)/sqrt(n()),
media = mean(get(columna)))
pd <- position_dodge(0.5) #Es para que las barras de error no se overlapen y se espacien horizontalmente
ggplot(dfsumarize, aes(x=`get(agrupapor)`, y=media,color=`get(var_color)`,group=0)) +
geom_errorbar( aes(ymin=media-1.96*sderr,ymax=media + 1.96*sderr),width = 0.2,position =pd) +
geom_point(position=pd)+
geom_line(position = pd)+
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel",var_color ="NA"){
dfsumarize <- Datos %>%
group_by(get(agrupapor),get(var_color)) %>%
summarise(sderr = sd(get(columna),na.rm = TRUE)/sqrt(n()),
media = mean(get(columna)))
pd <- position_dodge(0.5) #Es para que las barras de error no se overlapen y se espacien horizontalmente
ggplot(dfsumarize, aes(x=`get(agrupapor)`, y=media,color=`get(var_color)`,group=2)) +
geom_errorbar( aes(ymin=media-1.96*sderr,ymax=media + 1.96*sderr),width = 0.2,position =pd) +
geom_point(position=pd)+
geom_line(position = pd)+
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel",var_color ="NA"){
dfsumarize <- Datos %>%
group_by(get(agrupapor),get(var_color)) %>%
summarise(sderr = sd(get(columna),na.rm = TRUE)/sqrt(n()),
media = mean(get(columna)))
pd <- position_dodge(0.5) #Es para que las barras de error no se overlapen y se espacien horizontalmente
ggplot(dfsumarize, aes(x=`get(agrupapor)`, y=media,color=`get(var_color)`)) +
geom_errorbar( aes(ymin=media-1.96*sderr,ymax=media + 1.96*sderr),width = 0.2,position =pd) +
geom_point(position=pd)+
geom_line(position = pd)+
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel",var_color ="NA"){
dfsumarize <- Datos %>%
group_by(get(agrupapor),get(var_color)) %>%
summarise(sderr = sd(get(columna),na.rm = TRUE)/sqrt(n()),
media = mean(get(columna)))
pd <- position_dodge(0.5) #Es para que las barras de error no se overlapen y se espacien horizontalmente
ggplot(dfsumarize, aes(x=`get(agrupapor)`, y=media,color=`get(var_color)`)) +
geom_errorbar( aes(ymin=media-1.96*sderr,ymax=media + 1.96*sderr),width = 0.2,position =pd) +
facet_wrap(Grupo)+
geom_point(position=pd)+
geom_line(position = pd)+
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel",var_color ="NA"){
dfsumarize <- Datos %>%
group_by(get(agrupapor),get(var_color)) %>%
summarise(sderr = sd(get(columna),na.rm = TRUE)/sqrt(n()),
media = mean(get(columna)))
pd <- position_dodge(0.5) #Es para que las barras de error no se overlapen y se espacien horizontalmente
ggplot(dfsumarize, aes(x=`get(agrupapor)`, y=media,color=`get(var_color)`)) +
geom_errorbar( aes(ymin=media-1.96*sderr,ymax=media + 1.96*sderr),width = 0.2,position =pd) +
facet_wrap(get(agrupapor))+
geom_point(position=pd)+
geom_line(position = pd)+
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel",var_color ="NA"){
dfsumarize <- Datos %>%
group_by(get(agrupapor),get(var_color)) %>%
summarise(sderr = sd(get(columna),na.rm = TRUE)/sqrt(n()),
media = mean(get(columna)))
pd <- position_dodge(0.5) #Es para que las barras de error no se overlapen y se espacien horizontalmente
ggplot(dfsumarize, aes(x=`get(agrupapor)`, y=media,color=`get(var_color)`)) +
geom_errorbar( aes(ymin=media-1.96*sderr,ymax=media + 1.96*sderr),width = 0.2,position =pd) +
facet_wrap(`get(agrupapor)`)+
geom_point(position=pd)+
geom_line(position = pd)+
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel",var_color ="NA"){
dfsumarize <- Datos %>%
group_by(get(agrupapor),get(var_color)) %>%
summarise(sderr = sd(get(columna),na.rm = TRUE)/sqrt(n()),
media = mean(get(columna)))
pd <- position_dodge(0.5) #Es para que las barras de error no se overlapen y se espacien horizontalmente
ggplot(dfsumarize, aes(x=`get(agrupapor)`, y=media,color=`get(var_color)`)) +
geom_errorbar( aes(ymin=media-1.96*sderr,ymax=media + 1.96*sderr),width = 0.2,position =pd) +
facet_wrap(~`get(agrupapor)`)+
geom_point(position=pd)+
geom_line(position = pd)+
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel",var_color ="NA"){
dfsumarize <- Datos %>%
group_by(get(agrupapor),get(var_color)) %>%
summarise(sderr = sd(get(columna),na.rm = TRUE)/sqrt(n()),
media = mean(get(columna)))
pd <- position_dodge(0.5) #Es para que las barras de error no se overlapen y se espacien horizontalmente
ggplot(dfsumarize, aes(x=`get(var_color)`, y=media,color=`get(var_color)`)) +
geom_errorbar( aes(ymin=media-1.96*sderr,ymax=media + 1.96*sderr),width = 0.2,position =pd) +
facet_wrap(~`get(agrupapor)`)+
geom_point(position=pd)+
geom_line(position = pd)+
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel",var_color ="NA"){
dfsumarize <- Datos %>%
group_by(get(agrupapor),get(var_color)) %>%
summarise(sderr = sd(get(columna),na.rm = TRUE)/sqrt(n()),
media = mean(get(columna)))
pd <- position_dodge(0.5) #Es para que las barras de error no se overlapen y se espacien horizontalmente
ggplot(dfsumarize, aes(x=`get(var_color)`, y=media,color=`get(var_color)`,group=1)) +
geom_errorbar( aes(ymin=media-1.96*sderr,ymax=media + 1.96*sderr),width = 0.2,position =pd) +
facet_wrap(~`get(agrupapor)`)+
geom_point(position=pd)+
geom_line(position = pd)+
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
#GRAFICAS DESCRIPTIVAS COMO BOX PLOTS Y DIAGRAM ERRORS
creaboxplot(df,"Grupo","diffodi","Box Plot Diffoddi por Hernias","Hernias","diffoddi","NHD")
creaboxplot <- function(Datos, var_x,var_y,Titulo,xlabel="NA",ylabel="NA",var_color="NA"){
ggplot(data = Datos) +
geom_boxplot(mapping = aes(
x = reorder(get(var_x),get(var_y),FUN = median),
y = get(var_y),
fill=get(var_color)
)) +
#geom_jitter(mapping = aes(x=get(var_x),y=get(var_y),color=get(var_color)) ,position=position_jitter(0.2))+
labs(title = Titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
#GRAFICAS DESCRIPTIVAS COMO BOX PLOTS Y DIAGRAM ERRORS
creaboxplot(df,"Grupo","diffodi","Box Plot Diffoddi por Hernias","Hernias","diffoddi","NHD")
crea_errdiagram(df,"diffodi","Grupo","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","Grupo","diffodi","NHD")
#GRAFICAS DESCRIPTIVAS COMO BOX PLOTS Y DIAGRAM ERRORS
creaboxplot(df,"Grupo","diffodi","Box Plot Diffoddi por Tratamiento y No de Hernias","Tratamiento","diffoddi","NHD")
crea_errdiagram(df,"diffodi","NHD","Diagrama de Medias diffoddi Grupo Tratamiento y  NHD","NHD","diffodi","Grupo")
###Calculo la Tabla de Contingencias para comprobar si son observaciones balanceadas
table(df$Grupo,df$NHD)
###Calculo la Tabla de Contingencias para comprobar si son observaciones balanceadas
addmargins(table(df$Grupo,df$NHD),c(1,2))
###Calculo la Tabla de Contingencias para comprobar si son observaciones balanceadas
addmargins(table(df$Grupo,df$NHD),c(1,2))
##
# CALCULO DE LA TABLA ANOVAS ADITIVO Y MULPLICATIVO DE LOS FACTORES
##
#Two way Anova Aditivo (PARA CASOS BALANCEADOS)
t_aov <-  aov(diffodi ~ Grupo + NHD,data=df)
summary.aov(t_aov)
#Two way Anova Aditivo (PARA CASOS BALANCEADOS)
t_aov <-  aov(diffodi ~ Grupo + NHD,data=df)
summary.aov(t_aov)
#Two way Anova Aditivo (PARA CASOS BALANCEADOS)
t_aov <-  aov(diffodi ~ Grupo + NHD,data=df)
summary.aov(t_aov)
#Two way Anova Multiplicativo (PARA CASOS BALANCEADOS)
t_aov <-  aov(diffodi ~ Grupo * NHD,data=df)
summary.aov(t_aov)
# Calculo Normalidad de los residuos para ver si son Parametricos
res1 <-  residuals(object = t_aov)
shapiro.test(x=res1)
plot(res1 ,1)
plot(t_aov ,1)
plot(t_aov ,2)
# Calculo Normalidad de los residuos de la anova para ver si son Parametricos
res1 <-  residuals(object = t_aov)
shapiro.test(x=res1)
#grafica para mostrar la forma de la grafica y ver si parecen normalesa
plot(t_aov ,1)
plot(t_aov ,2)
#Two way Anova Aditivo (PARA CASOS BALANCEADOS)
t_aov <-  aov(diffodi ~ Grupo + NHD,data=df)
summary.aov(t_aov)
# Calculo Normalidad de la anova para ver si son Parametricos
res1 <-  residuals(object = t_aov)
shapiro.test(x=res1)
#Two way Anova Aditivo (PARA CASOS BALANCEADOS)
t_aov <-  aov(diffodi ~ Grupo + NHD,data=df)
summary.aov(t_aov)
# Calculo Normalidad de la anova para ver si son Parametricos
res1 <-  residuals(object = t_aov)
shapiro.test(x=res1)
#grafica para mostrar la forma de la grafica y ver si parecen normalesa
plot(t_aov ,1)
plot(t_aov ,2)
#Two way Anova Multiplicativo (PARA CASOS BALANCEADOS)
t_aov <-  aov(diffodi ~ Grupo * NHD,data=df)
summary.aov(t_aov)
#Two way Anova Multiplicativo (PARA CASOS BALANCEADOS)
t_aov2 <-  aov(diffodi ~ Grupo * NHD,data=df)
summary.aov(t_aov2)
#Two way Anova Aditivo (PARA CASOS BALANCEADOS)
t_aov <-  aov(diffodi ~ Grupo + NHD,data=df)
summary.aov(t_aov)
# Calculo Normalidad de la anova para ver si son Parametricos
res1 <-  residuals(object = t_aov)
shapiro.test(x=res1)
#grafica para mostrar la forma de la grafica y ver si parecen normalesa
plot(t_aov ,1)
plot(t_aov ,2)
#Two way Anova Multiplicativo (PARA CASOS BALANCEADOS)
t_aov2 <-  aov(diffodi ~ Grupo * NHD,data=df)
summary.aov(t_aov2)
#Calculo la Normalidad  del anova para cuando creo que no son independiente
res2 <-  residuals(object=t_aov2)
shapiro.test(x=res2)
# grafica para mostrar la forma de la distribucion y ver si parecen normales
plot(t_avo2,1)
#Two way Anova Multiplicativo (PARA CASOS BALANCEADOS)
t_aov2 <-  aov(diffodi ~ Grupo * NHD,data=df)
summary.aov(t_aov2)
# grafica para mostrar la forma de la distribucion y ver si parecen normales
plot(t_avo2,1)
# grafica para mostrar la forma de la distribucion y ver si parecen normales
plot(t_aov2,1)
plot(t_aov2,2)
#Calculo la Normalidad  del anova para cuando creo que no son independiente
res2 <-  residuals(object=t_aov2)
shapiro.test(x=res2)
summary(glht(t_aov,linfct=mcp(dose="Tukey")))
### Pairwise comparison
install.packages(multcomp)
### Pairwise comparison
install.packages("multcomp")
library(multcomp)
summary(glht(t_aov,linfct=mcp(dose="Tukey")))
summary(glht(t_aov,linfct=mcp(diffodi="Tukey")))
summary(glht(t_aov,linfct=mcp(Grupo="Tukey")))
summary(glht(t_aov,linfct=mcp(NHD="Tukey")))
#GLH para Grupo
summary(glht(t_aov,linfct=mcp(Grupo="Tukey")))
#GLH para Nro de Hernia
summary(glht(t_aov,linfct=mcp(NHD="Tukey")))
##
# PairWise para el factor NHD x que tiene 3 niveles..
# NO se lo hago a Grupo xq no tiene sentido ya que son solo dos niveles
##
pairwise.t.test(df[,12],df[,8],p.adjust.method="BH")
##
# PairWise para el factor NHD x que tiene 3 niveles..
# NO se lo hago a Grupo xq no tiene sentido ya que son solo dos niveles
##
pairwise.t.test(df[,12],df[,8],p.adjust.methods="BH")
View(df)
df$NHD <- factor(df$NHD,labels  = c(0,1,2))
pairwise.t.test(df[,12],df[,8],p.adjust.methods="BH")
df$NHD
df$NHD <- factor(df$NHD)
pairwise.t.test(df[,12],df[,8],p.adjust.method="BH")
df <- espalda <- read_excel("espalda.xlsx")
###
# Preparo datos, creo columnas, grupos etc
###
df$diffodi  <- df$`ODI Mes0` - df$`ODI Mes1` # agrego  variable con la mejoria
df$Grupo <- factor(df$Grupo,labels = c("Convencional","Experimental")) #Tipo de tratamiento
pairwise.t.test(df[,12],df[,8],p.adjust.method="BH")
df$NHD <- factor(df$NHD)
pairwise.t.test(df[,12],df[,8],p.adjust.method="BH")
pairwise.t.test(df[,12],df[,11],p.adjust.method="BH")
#creo factores
df$NHD <- factor(df$NHD,labels  = c("Sin Hernia","1 Hernia","2 Hernias")) #Hernias
df$Grupo <- factor(df$Grupo,labels = c("Convencional","Experimental")) #Tipo de tratamiento
pairwise.t.test(df[,12],df[,11],p.adjust.method="BH")
##
# TEST NO PARAMETRICO scheireNayHer
##
scheirerNayHer(diffodi ~ Grupo + NHD,data=df)
##
# TEST NO PARAMETRICO scheireNayHer
##
scheirerNayHare(diffodi ~ Grupo + NHD,data=df)
##
# TEST NO PARAMETRICO scheireNayHer
##
install.packages("rcompanion")
library(rcompanion)
scheirerNayHare(diffodi ~ Grupo + NHD,data=df)
scheirerRayHare(diffodi ~ Grupo + NHD,data=df)
#Test two way anova caso NO PARAMETRICO
scheirerRayHare(diffodi ~ Grupo + NHD,data=df)
####
# Test Parametrico pero para two way anovas no balanceadas
###
anova(t_aov,type="III")
####
# Test Parametrico pero para two way anovas no balanceadas
###
anova(t_aov2,type="III")
#Two way Anova Multiplicativo (PARA CASOS BALANCEADOS)
t_aov2 <-  aov(diffodi ~ Grupo * NHD,data=df)
summary.aov(t_aov2)
####
# Test Parametrico pero para two way anovas no balanceadas
###
anova(t_aov2,type="III")
df <- espalda <- read_excel("espalda.xlsx")
###
# Preparo datos, creo columnas, grupos etc
###
df$diffodi  <- df$`ODI Mes0` - df$`ODI Mes1` # agrego  variable con la mejoria
#creo factores
df$NHD <- factor(df$NHD,labels  = c("Sin Hernia","1 Hernia","2 Hernias")) #Hernias
df$Grupo <- factor(df$Grupo,labels = c("Convencional","Experimental")) #Tipo de tratamiento
###Calculo la Tabla de Contingencias para comprobar si son observaciones balanceadas
addmargins(table(df$Grupo,df$NHD),c(1,2))
#Two way Anova Aditivo (PARA CASOS BALANCEADOS)
t_aov <-  aov(diffodi ~ Grupo + NHD,data=df)
summary.aov(t_aov)
####
# Test Parametrico pero para two way anovas no balanceadas
###
anova(t_aov2,type="III")
#Two way Anova Multiplicativo (PARA CASOS BALANCEADOS)
t_aov2 <-  aov(diffodi ~ Grupo * NHD,data=df)
summary.aov(t_aov2)
####
# Test Parametrico pero para two way anovas no balanceadas
###
anova(t_aov2,type="III")
#Calculo la Normalidad  del anova para cuando creo que no son independiente
res2 <-  residuals(object=t_aov2)
####
# Test Parametrico pero para two way anovas no balanceadas
###
anova(res2,type="III")
####
# Test Parametrico pero para two way anovas no balanceadas
###
anova(t_aov2,type="III")
####
# Test Parametrico pero para two way anovas no balanceadas
###
anova(t_aov2,type="II")
####
# Test Parametrico pero para two way anovas no balanceadas
###
Anova(t_aov2,type="III")
####
# Test Parametrico pero para two way anovas no balanceadas
###
Anova(t_aov,type="III")
####
# Test Parametrico pero para two way anovas no balanceadas
###
Anova(t_aov2,type="III")
####
# Test Parametrico pero para two way anovas no balanceadas
# Anova(resdelaanovamultiplicativa ,type="III)
###
Anova(t_aov2,type="III")
