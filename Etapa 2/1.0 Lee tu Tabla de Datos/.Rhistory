dfanios <-data.frame(anio1 = rnorm(1000,5,1), anio2 = rnorm(1000,5,1))
describe(dfanios, na.rm = TRUE,IQR = TRUE)
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum))))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Max       = apply(dfanios,2,max),
Min       = applyapply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile.prob = c(0.25)),
IQ3       = apply(dfanios,2,quantile.prob = c(0.75)))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile.prob = c(0.25)),
IQ3       = apply(dfanios,2,quantile.prob = c(0.75)))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile.prob = c(0.25)),
IQ3       = apply(dfanios,2,quantile.prob = c(0.75)))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile.prob = 0.25),
IQ3       = apply(dfanios,2,quantile.prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(apply(dfanios,2,sum),2,round),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(round(apply(dfanios,2,sum),0)),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = round(apply(dfanios,2,sum),0),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = trunc(apply(dfanios,2,sum)),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = trunc(apply(dfanios,2,sum),2),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = as.integer(apply(dfanios,2,sum)),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,n),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,count),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = IQ3 - IQ1)
))
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) )
))
estadescriptiva
n(dfanios)
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,n),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) )
))
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,length),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) )
))estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,length),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) )
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) ),
Registros = apply(dfanios,2,length)
))
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) ,
Registros = apply(dfanios,2,length))
))
estadescriptiva
write.xlsx(estadescriptiva,"Estadistica Descriptiva.xlsx",sheet.name = "Descriptiva", col.names = TRUE, row.names =TRUE, append = FALSE )
write.csv(estadescriptiva,"Estadi_Descriptiva.csv",sep=";",col.names = TRUE)
write.csv(estadescriptiva, "Estadi_Descriptiva.csv",col.names = TRUE, sep=";"  )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv", col.names = TRUE  )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv"  )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv",col.names = TRUE )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv",sep = ",")
write.csv2(estadescriptiva, "Estadi_Descriptiva.csv",sep = ",")
write.csv2(estadescriptiva, "Estadi_Descriptiva.csv")
write.table(estadescriptiva,"Estadi_Descriptiva.txt",sep=';')
write.table(estadescriptiva,"Estadi_Descriptiva.txt",sep=';')
write.table(estadescriptiva,"Estadi_Descriptiva.txt",sep=';')
library(rmarkdown)
library(rmarkdown)
library(markdown)
#********************************************************************
# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("xlsx")
# Instala los paquetes sinÃ³ los tienes instalados
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinÃ³ los tienes cargados
lapply(.packages, require, character.only=TRUE)
plot(cars)
plot(cars)
plot(cars)
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinÃÂ³ los tienes cargados
lapply(.packages, require, character.only=TRUE)
#********************************************************************
# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr")
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinÃÂ³ los tienes cargados
lapply(.packages, require, character.only=TRUE)
###
# Seteo el Directorio....
##
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Bloque 2/1.0 Lee tu Tabla de Datos")
cnames <- num_range("Col",1:16)
cnames <- select(num_range("Col",1:16))
map(c("cnames",range(1:16)))
"col" * 16
##
#Texto Separado por comas sin columns names
#
range(1:16)
##
#Texto Separado por comas sin columns names
#
range(1,16)
##
#Texto Separado por comas sin columns names
#
c(range(1,16))
###
# Seteo el Directorio....
##
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Bloque 2/1.0 Lee tu Tabla de Datos")
library(readxl)
abalone <- read_excel("abalone.xlsx", sheet = "abalone")
View(abalone)
####
# Leyendo archivos excel y visualizacion
####
abalone <- read_xlsx("abalone.xlsx",abalone <- read_excel("abalone.xlsx", sheet = "abalone")
View(abalone)
)
View(abalone)
####
# Leyendo archivos excel y visualizacion
####
abalone <- <- read_excel("abalone.xlsx", sheet = "abalone")
####
# Leyendo archivos excel y visualizacion
####
abalone  <- read_excel("abalone.xlsx", sheet = "abalone")
View(abalone)
rep("col",16)
map(rep("col",16),range(1:16))
espalda <-  read_excel("espalda.xlsx")
str(espalda)
factor(espalda[:2])
espalda[:2]
espalda[,2]
factor(espalda[,2])
factor(espalda[,2])
factor(espalda[,2],levels = c(1,0),labels = c ("Male","Female"))
espalda[,2] <- factor(espalda[,2],levels = c(1,0),labels = c ("Male","Female"))
espalda
espalda <-  read_excel("espalda.xlsx")
str(espalda)
view(espalda)
View(espalda)
espalda[,2] <- factor(espalda[,2],levels = c(0,1),labels = c ("Male","Female"))
espalda
espalda <-  read_excel("espalda.xlsx")
espalda[,2] <- factor(espalda[,2],levels = as.character(c(0,1)),labels = c ("Male","Female"))
espalda
espalda[,2] <- factor(as.character(espalda[,2]),levels = c(0,1),labels = c ("Male","Female"))
espalda
espalda <-  read_excel("espalda.xlsx")
espalda[,2] <- factor(as.character(espalda[,2]),levels = c(0,1),labels = c ("Male","Female"))
espalda
str(espalda)
espalda <-  read_excel("espalda.xlsx")
espalda[,2] <- factor(as.character(espalda[,2]), c ("Male","Female"))
str(espalda)
espalda <-  read_excel("espalda.xlsx")
str(espalda)
espalda[,2] <- factor(as.character(espalda[,2]), c ("Male","Female"))
str(espalda)
espalda <-  read_excel("espalda.xlsx")
factor(as.character(espalda[,2]), c ("Male","Female"))
espalda[,2] <- factor(espalda[,2], levels = c("0","1"), labels = c("Male","Female"))
str(espalda)
View(espalda)
as.character(espalda)
espalda <-  read_excel("espalda.xlsx")
as.character(espalda[,1])
as.character(espalda[,2])
c(as.character(espalda[,2]))
espalda[,2] <- factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("Male","Female"))
View(espalda)
espalda <-  read_excel("espalda.xlsx")
str(espalda)
factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("Male","Female"))
ft <-  factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("Male","Female"))
ft
c(1:16)
purrr::map(c(rep("col",16)),c(1:6))
paste(c(rep("col",16)),c(1:6))
#Creo un vector concatenando col... con un arreglo de numeros y quedaria , col1,col2,col3 ...
cnames <- paste(c(rep("col",16)),c(1:6))
df_ejemplodatos <-  read.csv("ejemplo-datos.txt",header = FALSE,col.names = c(cnames))
View(df_ejemplodatos)
ft <-  factor(as.character(espalda[,2]), labels = c("Male","Female"))
ft <-  factor(as.character(espalda[,2]), labels = c("M","F"))
ft <-  factor(as.character(espalda[,2]), levels = c(0,1) labels = c("M","F"))
ft <-  factor(as.character(espalda[,2]), levels = c(0,1) labels = c("M","F"))
ft <-  factor(as.character(espalda[,2]), levels = c("0","1") labels = c("M","F"))
factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("M","F"))
factor(c(as.character(espalda[,2])), levels = c("0","1"), labels = c("M","F"))
a <- factor(c(as.character(espalda[,2])), levels = c("0","1"), labels = c("M","F"))
A
a
a <- factor(c(as.character(espalda[,2])), levels = c("0","1"), labels = c("M","F"),ordered = FALSE)
a
c(as.character(espalda[,2]))
a <- factor(espalda[,2], levels = c("0","1"), labels = c("M","F"),ordered = FALSE)
a
mutate(espalda,
sexo = factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("M","F"),ordered = FALSE)))
espalda <- mutate(espalda,
sexo1 = factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("M","F"),ordered = FALSE))
espalda
View(espalda)
espalda <- mutate(espalda,
sexo1 = c(factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("M","F"),ordered = FALSE)))
View(espalda)
factanal(espalda[,2])
factor(espalda[,2])
factor(espalda[,2],labels = c("female","male"))
factor(espalda[,2],labels = c("f","m"))
factor(espalda[,2],labels = c("f","m"))
factor(espalda[,2],levels = c(0,1),labels = c("f","m"))
factor(espalda[,2],levels = c("0","1"),labels = c("f","m"))
espalda <-  read_excel("espalda.xlsx")
espalda$sexo <-  factor(espalda$Sexo,levels = c("0","1"),labels = c("Male","Female"))
View(espalda)
espalda <-  read_excel("espalda.xlsx")
espalda$sexo <-  factor(espalda$Sexo,levels = c('0','1'),labels = c('Male','Female'))
View(espalda)
espalda <-  read_excel("espalda.xlsx")
dfs <- espalda[,2]
dfs$Sexo <-  factor(dfs$Sexo,levels = c("0","1"),labels = c("Male","Female"))
dfs$Sexo
espalda$sexo <-  dfs$Sexo
View(espalda)
espalda <-  read_excel("espalda.xlsx")
espalda
espalda <-  read_excel("espalda.xlsx")
dfs$Sexo <-  factor(espalda$Sexo,levels = c("0","1"),labels = c("Male","Female"))
View(espalda)
espalda <-  read_excel("espalda.xlsx")
dfs <- espalda[,2]
dfs$Sexo <-  factor(dfs$Sexo,levels = c("0","1"),labels = c("Male","Female"))
espalda$Sexo <-  dfs$Sexo
View(espalda)
espalda$Tratamiento_Num <- factor(espalda$Tratamiento_Num,levels = c("0","1"),labels = c("Convencional","Avanzado"))
View(espalda)
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(0,0.20,0.40,0.60,0.80),labels = C("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(0,0.20,0.40,0.60,0.80),labels = C("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(0,0.20,0.40,0.60,0.80),labels = C("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda
?cut
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(0,20,40,60,80),labels = C("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(20,40,60,80),labels = C("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(20,40,60,80,Inf),labels = C("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(20,40,60,80,Inf),labels = c("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(0,20,40,60,80,Inf),labels = c("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda
cut(espalda$`ODI Mes0`,breaks = c(0,20,40,60,80,Inf),labels = c("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda$ODIMESOGRUPO <- cut(espalda$`ODI Mes0`,breaks = c(0,20,40,60,80,Inf),labels = c("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda
espalda <-  read_excel("espalda.xlsx")
dfs <- espalda[,2]
dfs$Sexo <-  factor(dfs$Sexo,levels = c("0","1"),labels = c("Male","Female"))
espalda$Sexo <-  dfs$Sexo
espalda$Tratamiento_Num <- factor(espalda$Tratamiento_Num,levels = c("0","1"),labels = c("Convencional","Avanzado"))
View(espalda)
espalda$OdiMes0Grupo <- cut(espalda$`ODI Mes0`,breaks = c(0,20,40,60,80,Inf),labels = c("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda
###
# convirtiendo una columna numerica OdiMes1 en grupos de rangos (categorica) (0-20% > Minima, 20% -40% -> MOderada...etc)
###
espalda$OdiMes1Grupo <- cut(espalda$`ODI Mes1`,breaks = c(0,20,40,60,80,Inf), labels=c("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
###
# Seteo el Directorio....
##
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Bloque 2/1.0 Lee tu Tabla de Datos")
espalda <-  read_excel("espalda.xlsx")
espalda <-  read_excel("espalda.xlsx")
View(espalda)
espalda$Sexo <- factor(espalda$Sexo,levels = c("0","1"), labels = c("Hombre","Mujer"))
View(espalda)
View(espalda)
#Creo una variable usando el logaritmo
dflogpeso <-  log(espalda$Peso)
espalda$logpeso <- dflogpeso
View(espalda)
View(espalda)
#Creo una vriable que sale de multiplicar dos variables logpeso * altura
dflogpesoxaltura <- espalda$logpeso * espalda$Altura
Peso_estand <-  scale(espalda$Peso,center = TRUE, scale = TRUE) #center = true (media 0), scale = true (std 1)
mean(Peso_estand)
sd(Peso_estand)
hist(espalda$Peso)
hist(Peso_estand)
hist(espalda$Peso)
hist(Peso_estand)
hist(espalda$Peso)
hist(espalda$Peso,y=..density..) # Sin
plot(espalda$Peso) # Sin
plot(Peso_estand)
plot(Peso_estand)
plot(espalda$Peso) # Sin
plot(espalda$Peso) # Sin
plot(Peso_estand)
hist(espalda$Peso) # Sin
hist(Peso_estand)
plot(espalda$peso)
plot(espalda$Peso)
#Escalar Variables
Peso_estand <-  scale(espalda$Peso,center = TRUE, scale = FALSE) #center = true (media 0), scale = true (std 1)
mean(Peso_estand) #Media cero 0
sd(Peso_estand)    # desv standar 1
#Escalar Variables MEDIA CERO Y STDEV NO ES UNO
Peso_estand <-  scale(espalda$Peso,center = TRUE, scale = FALSE) #center = true (media 0), scale = true (std 1)
mean(Peso_estand) #Media cero 0
sd(Peso_estand)    # desv standar 1
hist(espalda$Peso) # Sin
hist(Peso_estand)
hist(espalda$Peso) # Sin
hist(Peso_estand)
hist(espalda$Peso) # Sin
hist(Peso_estand)
#Escalar Variables MEDIA NO ESCERO Y STDEV ES UNO
Peso_estand <-  scale(espalda$Peso,center = FALSE, scale = TRUE) #center = true (media 0), scale = true (std 1)
mean(Peso_estand) #Media NO ES cero 0
sd(Peso_estand)    # desv standar 1
hist(espalda$Peso) # Sin
hist(Peso_estand)
