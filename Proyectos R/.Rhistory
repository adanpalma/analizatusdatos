library(xlsx)
library(openxlsx)
library(openxlsx)
archivo <- openxlsx::read.xlsx(file.choose())
View(archivo)
str(archivo)
head(archivo,10)
head(archivo,10)
anio2017 <- archivo$'2017'[1]
anio2017 <- archivo$'2017'
colnames(archivo)
anio2017 <- archivo$"2017"
archivo$"2017"
archivo$"2017"[1]
archivo$"2017"[1:1]
archivo$"2017"[1:5]
anio2017 <- archivo$"2017"
anio2018 <- archivo$"2018"
hist(anio2017)
hist(anio2018)
summary(c(anio2017,anio2018))
summary(c(anio2017))
summary(c(anio2018))
library(dplyr)
summarise_all(c(anio2017,anio2018))
typeof(anio2017)
dfanios <-  data.frame(anio1 = anio2017, anio2 = anio2018)
dfanios.describe()
dfanios <-  pd.dataframe(anio1 = anio2017, anio2 = anio2018)
describe(dfanios)
summarize(dfanios)
matrix(c(1:10),5,2)
matrix(c(1:10),5,2,TRUE)
matrix(c(1:10),5,6,TRUE)
m1 <- matrix(c(1:10),5,6,TRUE)
m1
apply(m1,2,sum)
apply(m1,1,sum)
apply(m1,(1,2),sum)
apply(m1,c(1,2),sum)
apply(m1,1,sum)
apply(m1,2,sum)
apply(m1,2,sd)
apply(m1,1,sd)
apply(m1,2,sd)
typeof(m1)
lapply(m1,2,sd)
lapply(m1,sd)
lapply(m1[1],sd)
m1
lapply(m1[,1],sd)
m1[,1]
m1
tipeof(m1[,1])
tpeof(m1[,1])
y
typeof(m1[,1])
str(m1)
typeof(c(m1[,1])
)
typeof(c(m1[,1]))
lapply(c(m1[,1]),sd)
a <- c(m1[,1])
lapply(a,sd)
a
lapply(as.list(a),sd)
lapply(as.list(a),sd)[[1]]
movies <- c("SPYDERMAN","BATMAN","VERTIGO","CHINATOWN")
movies_lower <-lapply(movies, tolower)
str(movies_lower)
typeof(movies)
c(m1[,1])
a <- c(m1[,1])
a
lapply(a,sum)
lapply(a[[1]],sum)
lapply(a[[,1]],sum)
lapply(a[,1],sum)
lapply(a[1],sum)
sum(a)
sapply(a[1],sum)
sapply(a,sum)
list(a=c(1:5),b=c(6:10),d=c(11,15))
c <- list(a=c(1:5),b=c(6:10),d=c(11,15))
c
str(c)
c <- list(a=c(1:5),b=c(6:10),d=c(11:15))
str(c)
do.call(data.frame(),c)
do.call(data.frame,c)
do.call(data.frame,list(a=c(1:5),b=c(6:10),d=c(11:15)))
t(do.call(data.frame,list(a=c(1:5),b=c(6:10),d=c(11:15))))
describe(dfanios, na.rm = TRUE,IQR = TRUE)
library(openxlsx)
library(dplyr)
library(psych)
archivo <- openxlsx::read.xlsx(file.choose())
str(archivo)
colnames(archivo)
anio2017 <- archivo$"2017"
anio2018 <- archivo$"2018"
hist(anio2017)
hist(anio2018)
hist(anio2017)
hist(anio2018)
polygon(anio2017)
dfanios <-data.frame(anio1 = anio2017, anio2 = anio2018)
describe(dfanios, na.rm = TRUE,IQR = TRUE)
estadescriptiva <- t(do.call(data.frame,list(
n = apply(anio2018,2,count))))
anio2018
anio2017 <- na.omit(archivo$"2017")
anio2018 <- na.omit(archivo$"2018")
estadescriptiva <- t(do.call(data.frame,list(
n = apply(anio2018,2,n))))
estadescriptiva <- t(do.call(data.frame,list(
n = apply(anio2018[,1],2,n))))
estadescriptiva <- t(do.call(data.frame,list(
n = apply(anio2018,2,sum))))
estadescriptiva <- t(do.call(data.frame,list(
registros = apply(anio2018,2,sum))))
mean(anio2018)
mean(anio2018)
typeof(anio2018)
estadescriptiva <- t(do.call(data.frame,
aniolist(registros = apply(dfanios,2,sum))))
estadescriptiva <- t(do.call(data.frame,
aniolist(registros = apply(anio2018,2,sum))))
estadescriptiva <- t(do.call(data.frame,
aniolist(registros = apply(anio2018,2,sum))))
estadescriptiva <- t(do.call(data.frame,
aniolist(registros = apply(anio2018,2,sum))))
estadescriptiva <- t(do.call(data.frame,
aniolist(registros = apply(dfanios,2,sum))))
estadescriptiva <- t(do.call(data.frame,
aniolist(registros = apply(dfanios,2,sum))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum)))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum))))
estadescriptiva
dfanios <-data.frame(anio1 = na.ommit(anio2017), anio2 = na.ommit(anio2018))
dfanios <-data.frame(anio1 = na.omit(anio2017), anio2 = na.omit(anio2018))
dfanios <-data.frame(anio1 = rnorm(1000,5,1), anio2 = rnorm(1000,5,1))
describe(dfanios, na.rm = TRUE,IQR = TRUE)
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum))))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Max       = apply(dfanios,2,max),
Min       = applyapply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile.prob = c(0.25)),
IQ3       = apply(dfanios,2,quantile.prob = c(0.75)))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile.prob = c(0.25)),
IQ3       = apply(dfanios,2,quantile.prob = c(0.75)))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile.prob = c(0.25)),
IQ3       = apply(dfanios,2,quantile.prob = c(0.75)))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile.prob = 0.25),
IQ3       = apply(dfanios,2,quantile.prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(apply(dfanios,2,sum),2,round),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(round(apply(dfanios,2,sum),0)),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = round(apply(dfanios,2,sum),0),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = trunc(apply(dfanios,2,sum)),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = trunc(apply(dfanios,2,sum),2),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = as.integer(apply(dfanios,2,sum)),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,n),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,count),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = IQ3 - IQ1)
))
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) )
))
estadescriptiva
n(dfanios)
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,n),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) )
))
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,length),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) )
))estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,length),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) )
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) ),
Registros = apply(dfanios,2,length)
))
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) ,
Registros = apply(dfanios,2,length))
))
estadescriptiva
write.xlsx(estadescriptiva,"Estadistica Descriptiva.xlsx",sheet.name = "Descriptiva", col.names = TRUE, row.names =TRUE, append = FALSE )
write.csv(estadescriptiva,"Estadi_Descriptiva.csv",sep=";",col.names = TRUE)
write.csv(estadescriptiva, "Estadi_Descriptiva.csv",col.names = TRUE, sep=";"  )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv", col.names = TRUE  )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv"  )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv",col.names = TRUE )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv",sep = ",")
write.csv2(estadescriptiva, "Estadi_Descriptiva.csv",sep = ",")
write.csv2(estadescriptiva, "Estadi_Descriptiva.csv")
write.table(estadescriptiva,"Estadi_Descriptiva.txt",sep=';')
write.table(estadescriptiva,"Estadi_Descriptiva.txt",sep=';')
write.table(estadescriptiva,"Estadi_Descriptiva.txt",sep=';')
library(rmarkdown)
library(rmarkdown)
library(markdown)
#********************************************************************
# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("xlsx")
# Instala los paquetes sinó los tienes instalados
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinó los tienes cargados
lapply(.packages, require, character.only=TRUE)
plot(cars)
plot(cars)
plot(cars)
.packages = c("ggplot2", "plotly", "xlsx","scales","readr","dplyr","psych","readxl")
# Instala los paquetes sinó los tienes instalados
# Carga los paquetes sinó los tienes cargados
lapply(.packages, require, character.only=TRUE)
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Proyectos R")
Datos <- read_xlsx("Caso Practico/Entiende tu Tabla de Datos/Datos.xlsx")
creaboxplot <- function(Datos, var_x,var_y,Titulo,xlabel,ylabel="NA"){
ggplot(data = Datos) +
geom_boxplot(mapping = aes(
x = reorder(get(var_x),get(var_y),FUN = median),
y = get(var_y)
)) +
labs(title = Titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
creascatplot <- function(Datos, var_x,var_y,Titulo,xlabel,ylabel="NA",categoria="group"){
ggplot(data = Datos) +
geom_point(mapping = aes(x = get(var_x), y = get(var_y),color=get(categoria))) +
labs(title = Titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold")) +
geom_smooth(mapping = aes(x = get(var_x), y = get(var_y)), orientation = "y")+
facet_grid(. ~ get(categoria))
}
creascatplot(Datos,"LogNepPib","infantMortality","infantMortality vs PIB","LogNepPib","infantMortality")
creascatplot <- function(Datos, var_x,var_y,Titulo,xlabel,ylabel="NA",categoria="group"){
ggplot(data = Datos) +
geom_point(mapping = aes(x = get(var_x), y = get(var_y),color=get(categoria))) +
labs(title = Titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold")) +
geom_smooth(mapping = aes(x = get(var_x), y = get(var_y)), orientation = "y")+
#  facet_grid(. ~ get(categoria))
}
creascatplot <- function(Datos, var_x,var_y,Titulo,xlabel,ylabel="NA",categoria="group"){
ggplot(data = Datos) +
geom_point(mapping = aes(x = get(var_x), y = get(var_y),color=get(categoria))) +
labs(title = Titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold")) +
geom_smooth(mapping = aes(x = get(var_x), y = get(var_y)), orientation = "y")
#  facet_grid(. ~ get(categoria))
}
creascatplot(Datos,"LogNepPib","infantMortality","infantMortality vs PIB","LogNepPib","infantMortality")
