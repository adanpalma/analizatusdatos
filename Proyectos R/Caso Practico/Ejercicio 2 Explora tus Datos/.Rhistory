typeof(m1[,1])
str(m1)
typeof(c(m1[,1])
)
typeof(c(m1[,1]))
lapply(c(m1[,1]),sd)
a <- c(m1[,1])
lapply(a,sd)
a
lapply(as.list(a),sd)
lapply(as.list(a),sd)[[1]]
movies <- c("SPYDERMAN","BATMAN","VERTIGO","CHINATOWN")
movies_lower <-lapply(movies, tolower)
str(movies_lower)
typeof(movies)
c(m1[,1])
a <- c(m1[,1])
a
lapply(a,sum)
lapply(a[[1]],sum)
lapply(a[[,1]],sum)
lapply(a[,1],sum)
lapply(a[1],sum)
sum(a)
sapply(a[1],sum)
sapply(a,sum)
list(a=c(1:5),b=c(6:10),d=c(11,15))
c <- list(a=c(1:5),b=c(6:10),d=c(11,15))
c
str(c)
c <- list(a=c(1:5),b=c(6:10),d=c(11:15))
str(c)
do.call(data.frame(),c)
do.call(data.frame,c)
do.call(data.frame,list(a=c(1:5),b=c(6:10),d=c(11:15)))
t(do.call(data.frame,list(a=c(1:5),b=c(6:10),d=c(11:15))))
describe(dfanios, na.rm = TRUE,IQR = TRUE)
library(openxlsx)
library(dplyr)
library(psych)
archivo <- openxlsx::read.xlsx(file.choose())
str(archivo)
colnames(archivo)
anio2017 <- archivo$"2017"
anio2018 <- archivo$"2018"
hist(anio2017)
hist(anio2018)
hist(anio2017)
hist(anio2018)
polygon(anio2017)
dfanios <-data.frame(anio1 = anio2017, anio2 = anio2018)
describe(dfanios, na.rm = TRUE,IQR = TRUE)
estadescriptiva <- t(do.call(data.frame,list(
n = apply(anio2018,2,count))))
anio2018
anio2017 <- na.omit(archivo$"2017")
anio2018 <- na.omit(archivo$"2018")
estadescriptiva <- t(do.call(data.frame,list(
n = apply(anio2018,2,n))))
estadescriptiva <- t(do.call(data.frame,list(
n = apply(anio2018[,1],2,n))))
estadescriptiva <- t(do.call(data.frame,list(
n = apply(anio2018,2,sum))))
estadescriptiva <- t(do.call(data.frame,list(
registros = apply(anio2018,2,sum))))
mean(anio2018)
mean(anio2018)
typeof(anio2018)
estadescriptiva <- t(do.call(data.frame,
aniolist(registros = apply(dfanios,2,sum))))
estadescriptiva <- t(do.call(data.frame,
aniolist(registros = apply(anio2018,2,sum))))
estadescriptiva <- t(do.call(data.frame,
aniolist(registros = apply(anio2018,2,sum))))
estadescriptiva <- t(do.call(data.frame,
aniolist(registros = apply(anio2018,2,sum))))
estadescriptiva <- t(do.call(data.frame,
aniolist(registros = apply(dfanios,2,sum))))
estadescriptiva <- t(do.call(data.frame,
aniolist(registros = apply(dfanios,2,sum))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum)))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum))))
estadescriptiva
dfanios <-data.frame(anio1 = na.ommit(anio2017), anio2 = na.ommit(anio2018))
dfanios <-data.frame(anio1 = na.omit(anio2017), anio2 = na.omit(anio2018))
dfanios <-data.frame(anio1 = rnorm(1000,5,1), anio2 = rnorm(1000,5,1))
describe(dfanios, na.rm = TRUE,IQR = TRUE)
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum))))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Max       = apply(dfanios,2,max),
Min       = applyapply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile.prob = c(0.25)),
IQ3       = apply(dfanios,2,quantile.prob = c(0.75)))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile.prob = c(0.25)),
IQ3       = apply(dfanios,2,quantile.prob = c(0.75)))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile.prob = c(0.25)),
IQ3       = apply(dfanios,2,quantile.prob = c(0.75)))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min))))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile.prob = 0.25),
IQ3       = apply(dfanios,2,quantile.prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,sum),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(apply(dfanios,2,sum),2,round),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(round(apply(dfanios,2,sum),0)),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = round(apply(dfanios,2,sum),0),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = trunc(apply(dfanios,2,sum)),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = trunc(apply(dfanios,2,sum),2),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = as.integer(apply(dfanios,2,sum)),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,n),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(registros = apply(dfanios,2,count),
Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75))
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = IQ3 - IQ1)
))
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) )
))
estadescriptiva
n(dfanios)
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,n),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) )
))
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,length),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) )
))estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,length),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) )
))
estadescriptiva
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) ),
Registros = apply(dfanios,2,length)
))
estadescriptiva <- t(do.call(data.frame,
list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) ,
Registros = apply(dfanios,2,length))
))
estadescriptiva
write.xlsx(estadescriptiva,"Estadistica Descriptiva.xlsx",sheet.name = "Descriptiva", col.names = TRUE, row.names =TRUE, append = FALSE )
write.csv(estadescriptiva,"Estadi_Descriptiva.csv",sep=";",col.names = TRUE)
write.csv(estadescriptiva, "Estadi_Descriptiva.csv",col.names = TRUE, sep=";"  )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv", col.names = TRUE  )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv"  )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv",col.names = TRUE )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv",sep = ",")
write.csv2(estadescriptiva, "Estadi_Descriptiva.csv",sep = ",")
write.csv2(estadescriptiva, "Estadi_Descriptiva.csv")
write.table(estadescriptiva,"Estadi_Descriptiva.txt",sep=';')
write.table(estadescriptiva,"Estadi_Descriptiva.txt",sep=';')
write.table(estadescriptiva,"Estadi_Descriptiva.txt",sep=';')
library(rmarkdown)
library(rmarkdown)
library(markdown)
#********************************************************************
# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("xlsx")
# Instala los paquetes sinó los tienes instalados
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinó los tienes cargados
lapply(.packages, require, character.only=TRUE)
plot(cars)
plot(cars)
plot(cars)
TukeyHSD(aovlifeExpF) ## Anova entre los grupos para verlo por pares
#********************************************************************
# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr")
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinÃ³ los tienes cargados
lapply(.packages, require, character.only=TRUE)
#####################################
#
#Setear el working directory
#
# Leeo la tabla de datos
####################################
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Proyectos R/Caso Practico/Ejercicio 2 Explora tus Datos")
Datos <- read_xlsx("Datos.xlsx")
descriptiva <-  function(datos,columnas,colagruparpor) {
filtrar_por <-  unique(Datos[,colagruparpor])
listaout <- list()
for (g in (1:nrow(filtrar_por)))
{
df <-   filter(Datos, (Datos[,colagruparpor] == str_trim(filtrar_por[g,1])) ) %>%
select(c(colagruparpor,columnas))
for (i in (2:ncol(df)))
{
lista <- list(
Grupo = str_trim(filtrar_por[g,1]),
media =   apply(df[,i],2,mean),
cutmedia =    apply(df[,i],2,mean,trim=0.05),
StdErr   =  apply(df[,i],2,sd) / sqrt(apply(df[,i],2,length)),
IC95LimInf =  apply(df[,i],2,mean) - (1.96 *  apply(df[,i],2,sd) / sqrt(apply(df[,i],2,length))),
IC95LimSup =  apply(df[,i],2,mean) + (1.96 *  apply(df[,i],2,sd) / sqrt(apply(df[,i],2,length))),
mediana=   apply(df[,i],2,median),
sd=    apply(df[,i],2,sd),
var =   apply(df[,i],2,var),
obs =   apply(df[,i],2,length),
Min =   apply(df[,i],2,min),
Max=    apply(df[,i],2,max),
Rango =   apply(df[,i],2,max) -  apply(df[,i],2,min),
RangoIQR =   apply(df[,i],2,quantile,prob=0.25),
Q1=   apply(df[,i],2,quantile,prob=0.75),
Q3=   apply(df[,i],2,quantile,prob=0.75) - apply(df[,i],2,quantile,prob=0.25),
skew=    apply(df[,i],2,skew),
kurtosis =   apply(df[,i],2, kurtosi)
)
listaout[[str_trim(filtrar_por[g,1])]] <- lista
}
}
#Colocando Nombres a las Columnas y Filas a la matriz estadistica descriptiva
mt <- matrix(ncol = nrow(filtrar_por), nrow = 18 )
colnames(mt) <- names(listaout)
rownames(mt) <- names(listaout[[1]])
for (i in names(listaout))
{
mt[,i] <- unlist(listaout[[i]])
}
mt
}
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel"){
dfsumarize <- Datos %>%
group_by(get(agrupapor)) %>%
summarise(
sd = sd(get(columna),na.rm = TRUE),
media = mean(get(columna)))
#####
#  Creo grafico de errores o de medias
####
ggplot(dfsumarize, aes(x=reorder(`get(agrupapor)`,media), y=media,color=`get(agrupapor)`)) +
geom_line(aes(group = 1)) +
geom_errorbar( aes(ymin=media-sd,ymax=media + sd),width = 0.2) +
geom_point(size = 2) +
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
creaboxplot <- function(Datos, var_x,var_y,Titulo,xlabel="NA",ylabel="NA"){
ggplot(data = Datos) +
geom_boxplot(mapping = aes(
x = reorder(get(var_x),get(var_y),FUN = median),
y = get(var_y),fill=get(var_x)
)) +
labs(title = Titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
creascatplot <- function(Datos, var_x,var_y,Titulo,xlabel,ylabel="NA",categoria="group"){
ggplot(data = Datos) +
geom_point(mapping = aes(x = get(var_x), y = get(var_y),color=get(categoria))) +
labs(title = Titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold")) +
geom_smooth(mapping = aes(x = get(var_x), y = get(var_y)), orientation = "y")
#  facet_grid(. ~ get(categoria))
}
creagrafcorr <-  function(Datos,colx,coly,title,etiquetax,etiquetay,grupo=NA)  {
ggscatter(Datos, x = colx, y = coly,
color = grupo, shape = 21, size = 3,
fill = grupo,
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
facet.by = c(grupo),
title = title,
xlab =  etiquetax,
ylab =  etiquetay,
add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"),
conf.int = TRUE,
cor.coef = TRUE,
show.legend.text = TRUE,
cor.coeff.args = list(method = "pearson", label.x.npc = "center", label.y.npc = "top", label.sep = "\n")
)
}
#infantMortality reviso descriptiva de datos, luego un blox plot,diagram error y anovas por grupo InfantMortality
descriptiva(Datos,(8:8),(3:3))
#infantMortality reviso descriptiva de datos, luego un blox plot,diagram error y anovas por grupo InfantMortality
Data.Frame(descriptiva(Datos,(8:8),(3:3)))
#infantMortality reviso descriptiva de datos, luego un blox plot,diagram error y anovas por grupo InfantMortality
data.frame(descriptiva(Datos,(8:8),(3:3)))
#infantMortality reviso descriptiva de datos, luego un blox plot,diagram error y anovas por grupo InfantMortality
dfa <- data.frame(descriptiva(Datos,(8:8),(3:3)))
View(dfa)
creaboxplot(Datos,"group","infantMortality", "InfantMortality by Group","Grupo","InfantMortlity")
crea_errdiagram(Datos,"infantMortality","group","InfantMortality x Grupos","Grupos","Avg(InfatMortality)") #diagrama de error
#ANOVA
aovinfMortxGrupo <- (aov(infantMortality ~ group,Datos)) # Anova del grupo
summary(aovinfMortxGrupo) # Imprime suma resisuales, mean sq, Significancia
TukeyHSD(aovinfMortxGrupo) ## Anova entre los grupos para verlo por pares
# lifeExpF paso reviso descriptiva de datos, luego un blox plot,diagram error y anovas por grupo InfantMortality
dfe <- descriptiva(Datos,(6:6),(3:3))
View(dfe)
creaboxplot(Datos,"group","lifeExpF", "lifeExpF by Group","Grupo","lifeExpF")
crea_errdiagram(Datos,"lifeExpF","group","lifeExpF x Grupos","Grupos","Avg(lifeExpF)") #diagrama de error
#ANOVA
aovlifeExpF<- (aov(lifeExpF ~ group,Datos)) # Anova del grupo
summary(aovlifeExpF) # Imprime suma resisuales, mean sq, Significancia
TukeyHSD(aovlifeExpF) ## Anova entre los grupos para verlo por pares
