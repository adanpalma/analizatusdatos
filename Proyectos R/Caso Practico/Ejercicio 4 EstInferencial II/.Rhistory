list(Std       = apply(dfanios,2,sd),
Mean      = apply(dfanios,2,mean),
Median    = apply(dfanios,2,median),
Max       = apply(dfanios,2,max),
Min       = apply(dfanios,2,min),
IQ1       = apply(dfanios,2,quantile,prob = 0.25),
IQ3       = apply(dfanios,2,quantile,prob = 0.75),
rango     = apply(dfanios,2,quantile,prob = 0.75) - apply(dfanios,2,quantile,prob = 0.25) ,
Registros = apply(dfanios,2,length))
))
estadescriptiva
write.xlsx(estadescriptiva,"Estadistica Descriptiva.xlsx",sheet.name = "Descriptiva", col.names = TRUE, row.names =TRUE, append = FALSE )
write.csv(estadescriptiva,"Estadi_Descriptiva.csv",sep=";",col.names = TRUE)
write.csv(estadescriptiva, "Estadi_Descriptiva.csv",col.names = TRUE, sep=";"  )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv", col.names = TRUE  )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv"  )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv",col.names = TRUE )
write.csv(estadescriptiva, "Estadi_Descriptiva.csv",sep = ",")
write.csv2(estadescriptiva, "Estadi_Descriptiva.csv",sep = ",")
write.csv2(estadescriptiva, "Estadi_Descriptiva.csv")
write.table(estadescriptiva,"Estadi_Descriptiva.txt",sep=';')
write.table(estadescriptiva,"Estadi_Descriptiva.txt",sep=';')
write.table(estadescriptiva,"Estadi_Descriptiva.txt",sep=';')
library(rmarkdown)
library(rmarkdown)
library(markdown)
#********************************************************************
# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("xlsx")
# Instala los paquetes sinó los tienes instalados
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinó los tienes cargados
lapply(.packages, require, character.only=TRUE)
plot(cars)
plot(cars)
plot(cars)
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinÃ³ los tienes cargados
lapply(.packages, require, character.only=TRUE)
#********************************************************************
# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr")
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinÃ³ los tienes cargados
lapply(.packages, require, character.only=TRUE)
###
# Seteo el Directorio....
##
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Bloque 2/1.0 Lee tu Tabla de Datos")
cnames <- num_range("Col",1:16)
cnames <- select(num_range("Col",1:16))
map(c("cnames",range(1:16)))
"col" * 16
##
#Texto Separado por comas sin columns names
#
range(1:16)
##
#Texto Separado por comas sin columns names
#
range(1,16)
##
#Texto Separado por comas sin columns names
#
c(range(1,16))
###
# Seteo el Directorio....
##
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Bloque 2/1.0 Lee tu Tabla de Datos")
library(readxl)
abalone <- read_excel("abalone.xlsx", sheet = "abalone")
View(abalone)
####
# Leyendo archivos excel y visualizacion
####
abalone <- read_xlsx("abalone.xlsx",abalone <- read_excel("abalone.xlsx", sheet = "abalone")
View(abalone)
)
View(abalone)
####
# Leyendo archivos excel y visualizacion
####
abalone <- <- read_excel("abalone.xlsx", sheet = "abalone")
####
# Leyendo archivos excel y visualizacion
####
abalone  <- read_excel("abalone.xlsx", sheet = "abalone")
View(abalone)
rep("col",16)
map(rep("col",16),range(1:16))
espalda <-  read_excel("espalda.xlsx")
str(espalda)
factor(espalda[:2])
espalda[:2]
espalda[,2]
factor(espalda[,2])
factor(espalda[,2])
factor(espalda[,2],levels = c(1,0),labels = c ("Male","Female"))
espalda[,2] <- factor(espalda[,2],levels = c(1,0),labels = c ("Male","Female"))
espalda
espalda <-  read_excel("espalda.xlsx")
str(espalda)
view(espalda)
View(espalda)
espalda[,2] <- factor(espalda[,2],levels = c(0,1),labels = c ("Male","Female"))
espalda
espalda <-  read_excel("espalda.xlsx")
espalda[,2] <- factor(espalda[,2],levels = as.character(c(0,1)),labels = c ("Male","Female"))
espalda
espalda[,2] <- factor(as.character(espalda[,2]),levels = c(0,1),labels = c ("Male","Female"))
espalda
espalda <-  read_excel("espalda.xlsx")
espalda[,2] <- factor(as.character(espalda[,2]),levels = c(0,1),labels = c ("Male","Female"))
espalda
str(espalda)
espalda <-  read_excel("espalda.xlsx")
espalda[,2] <- factor(as.character(espalda[,2]), c ("Male","Female"))
str(espalda)
espalda <-  read_excel("espalda.xlsx")
str(espalda)
espalda[,2] <- factor(as.character(espalda[,2]), c ("Male","Female"))
str(espalda)
espalda <-  read_excel("espalda.xlsx")
factor(as.character(espalda[,2]), c ("Male","Female"))
espalda[,2] <- factor(espalda[,2], levels = c("0","1"), labels = c("Male","Female"))
str(espalda)
View(espalda)
as.character(espalda)
espalda <-  read_excel("espalda.xlsx")
as.character(espalda[,1])
as.character(espalda[,2])
c(as.character(espalda[,2]))
espalda[,2] <- factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("Male","Female"))
View(espalda)
espalda <-  read_excel("espalda.xlsx")
str(espalda)
factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("Male","Female"))
ft <-  factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("Male","Female"))
ft
c(1:16)
purrr::map(c(rep("col",16)),c(1:6))
paste(c(rep("col",16)),c(1:6))
#Creo un vector concatenando col... con un arreglo de numeros y quedaria , col1,col2,col3 ...
cnames <- paste(c(rep("col",16)),c(1:6))
df_ejemplodatos <-  read.csv("ejemplo-datos.txt",header = FALSE,col.names = c(cnames))
View(df_ejemplodatos)
ft <-  factor(as.character(espalda[,2]), labels = c("Male","Female"))
ft <-  factor(as.character(espalda[,2]), labels = c("M","F"))
ft <-  factor(as.character(espalda[,2]), levels = c(0,1) labels = c("M","F"))
ft <-  factor(as.character(espalda[,2]), levels = c(0,1) labels = c("M","F"))
ft <-  factor(as.character(espalda[,2]), levels = c("0","1") labels = c("M","F"))
factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("M","F"))
factor(c(as.character(espalda[,2])), levels = c("0","1"), labels = c("M","F"))
a <- factor(c(as.character(espalda[,2])), levels = c("0","1"), labels = c("M","F"))
A
a
a <- factor(c(as.character(espalda[,2])), levels = c("0","1"), labels = c("M","F"),ordered = FALSE)
a
c(as.character(espalda[,2]))
a <- factor(espalda[,2], levels = c("0","1"), labels = c("M","F"),ordered = FALSE)
a
mutate(espalda,
sexo = factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("M","F"),ordered = FALSE)))
espalda <- mutate(espalda,
sexo1 = factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("M","F"),ordered = FALSE))
espalda
View(espalda)
espalda <- mutate(espalda,
sexo1 = c(factor(as.character(espalda[,2]), levels = c("0","1"), labels = c("M","F"),ordered = FALSE)))
View(espalda)
factanal(espalda[,2])
factor(espalda[,2])
factor(espalda[,2],labels = c("female","male"))
factor(espalda[,2],labels = c("f","m"))
factor(espalda[,2],labels = c("f","m"))
factor(espalda[,2],levels = c(0,1),labels = c("f","m"))
factor(espalda[,2],levels = c("0","1"),labels = c("f","m"))
espalda <-  read_excel("espalda.xlsx")
espalda$sexo <-  factor(espalda$Sexo,levels = c("0","1"),labels = c("Male","Female"))
View(espalda)
espalda <-  read_excel("espalda.xlsx")
espalda$sexo <-  factor(espalda$Sexo,levels = c('0','1'),labels = c('Male','Female'))
View(espalda)
espalda <-  read_excel("espalda.xlsx")
dfs <- espalda[,2]
dfs$Sexo <-  factor(dfs$Sexo,levels = c("0","1"),labels = c("Male","Female"))
dfs$Sexo
espalda$sexo <-  dfs$Sexo
View(espalda)
espalda <-  read_excel("espalda.xlsx")
espalda
espalda <-  read_excel("espalda.xlsx")
dfs$Sexo <-  factor(espalda$Sexo,levels = c("0","1"),labels = c("Male","Female"))
View(espalda)
espalda <-  read_excel("espalda.xlsx")
dfs <- espalda[,2]
dfs$Sexo <-  factor(dfs$Sexo,levels = c("0","1"),labels = c("Male","Female"))
espalda$Sexo <-  dfs$Sexo
View(espalda)
espalda$Tratamiento_Num <- factor(espalda$Tratamiento_Num,levels = c("0","1"),labels = c("Convencional","Avanzado"))
View(espalda)
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(0,0.20,0.40,0.60,0.80),labels = C("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(0,0.20,0.40,0.60,0.80),labels = C("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(0,0.20,0.40,0.60,0.80),labels = C("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda
?cut
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(0,20,40,60,80),labels = C("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(20,40,60,80),labels = C("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(20,40,60,80,Inf),labels = C("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(20,40,60,80,Inf),labels = c("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda$`ODI Mes0Grupos` <- cut(espalda$`ODI Mes0`,breaks = c(0,20,40,60,80,Inf),labels = c("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda
cut(espalda$`ODI Mes0`,breaks = c(0,20,40,60,80,Inf),labels = c("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda$ODIMESOGRUPO <- cut(espalda$`ODI Mes0`,breaks = c(0,20,40,60,80,Inf),labels = c("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda
espalda <-  read_excel("espalda.xlsx")
dfs <- espalda[,2]
dfs$Sexo <-  factor(dfs$Sexo,levels = c("0","1"),labels = c("Male","Female"))
espalda$Sexo <-  dfs$Sexo
espalda$Tratamiento_Num <- factor(espalda$Tratamiento_Num,levels = c("0","1"),labels = c("Convencional","Avanzado"))
View(espalda)
espalda$OdiMes0Grupo <- cut(espalda$`ODI Mes0`,breaks = c(0,20,40,60,80,Inf),labels = c("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
espalda
###
# convirtiendo una columna numerica OdiMes1 en grupos de rangos (categorica) (0-20% > Minima, 20% -40% -> MOderada...etc)
###
espalda$OdiMes1Grupo <- cut(espalda$`ODI Mes1`,breaks = c(0,20,40,60,80,Inf), labels=c("Minimo","Moderado","Intensa","Discapacidad","Maxima"))
###
# Seteo el Directorio....
##
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Bloque 2/1.0 Lee tu Tabla de Datos")
espalda <-  read_excel("espalda.xlsx")
espalda <-  read_excel("espalda.xlsx")
View(espalda)
espalda$Sexo <- factor(espalda$Sexo,levels = c("0","1"), labels = c("Hombre","Mujer"))
View(espalda)
View(espalda)
#Creo una variable usando el logaritmo
dflogpeso <-  log(espalda$Peso)
espalda$logpeso <- dflogpeso
View(espalda)
View(espalda)
#Creo una vriable que sale de multiplicar dos variables logpeso * altura
dflogpesoxaltura <- espalda$logpeso * espalda$Altura
Peso_estand <-  scale(espalda$Peso,center = TRUE, scale = TRUE) #center = true (media 0), scale = true (std 1)
mean(Peso_estand)
sd(Peso_estand)
hist(espalda$Peso)
hist(Peso_estand)
hist(espalda$Peso)
hist(Peso_estand)
hist(espalda$Peso)
hist(espalda$Peso,y=..density..) # Sin
plot(espalda$Peso) # Sin
plot(Peso_estand)
plot(Peso_estand)
plot(espalda$Peso) # Sin
plot(espalda$Peso) # Sin
plot(Peso_estand)
hist(espalda$Peso) # Sin
hist(Peso_estand)
plot(espalda$peso)
plot(espalda$Peso)
#Escalar Variables
Peso_estand <-  scale(espalda$Peso,center = TRUE, scale = FALSE) #center = true (media 0), scale = true (std 1)
mean(Peso_estand) #Media cero 0
sd(Peso_estand)    # desv standar 1
#Escalar Variables MEDIA CERO Y STDEV NO ES UNO
Peso_estand <-  scale(espalda$Peso,center = TRUE, scale = FALSE) #center = true (media 0), scale = true (std 1)
mean(Peso_estand) #Media cero 0
sd(Peso_estand)    # desv standar 1
hist(espalda$Peso) # Sin
hist(Peso_estand)
hist(espalda$Peso) # Sin
hist(Peso_estand)
hist(espalda$Peso) # Sin
hist(Peso_estand)
#Escalar Variables MEDIA NO ESCERO Y STDEV ES UNO
Peso_estand <-  scale(espalda$Peso,center = FALSE, scale = TRUE) #center = true (media 0), scale = true (std 1)
mean(Peso_estand) #Media NO ES cero 0
sd(Peso_estand)    # desv standar 1
hist(espalda$Peso) # Sin
hist(Peso_estand)
cnames <- paste(c(rep("col",16)),c(1:6))
cnames
#Creo un vector concatenando col... con un arreglo de numeros y quedaria , col1,col2,col3 ...
cnames <- paste(c(rep("col",16)),c(1:16))
#Creo un vector concatenando col... con un arreglo de numeros y quedaria , col1,col2,col3 ...
cnames <- paste(c(rep("col",16)),c(1:16))
cnames
#********************************************************************
# 1.1 INSTALAR PAQUETES DE FUNCIONES
#********************************************************************
# Lista de paquetes de funciones a instalar
.packages = c("ggplot2", "plotly", "xlsx","scales","stringr","readr","dplyr","psych","readxl","ggpubr")
#********************************************************************
# 1.2 CARGAR PAQUETES O CREAR FUNCIONES
#********************************************************************
# Carga los paquetes sinÃ³ los tienes cargados
lapply(.packages, require, character.only=TRUE)
###
# Seteo el Directorio....
##
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Bloque 2/1.0 Lee tu Tabla de Datos")
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Bloque 2/2. Define tu plan de accion en 7 dias/Data")
###
# Seteo el Directorio....
##
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Bloque 2/2. Define tu plan de accion en 7 dias/Data")
library(readxl)
df <- read_excel("datosprestamos.xlsx", col_types = c("text",
"numeric", "text", "numeric", "text",
"text", "text", "text", "text", "text",
"text", "numeric", "text", "text", "text",
"text", "text", "numeric", "text", "text",
"text", "text", "text", "text", "text"))
View(df)
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Bloque 2/2. Define tu plan de accion en 7 dias/Data")
warnings()
library(readxl)
df <- read_excel("datosprestamos.xlsx", col_types = c("text",
"numeric", "text", "numeric", "text",
"text", "text", "text", "text", "text",
"text", "date", "date", "text", "text",
"text", "text", "numeric", "text", "text",
"text", "text", "text", "text", "text"))
View(df)
df <- read_excel("datosprestamos.xlsx", col_types = c("text",
+     "numeric", "text", "numeric", "text",
+     "text", "text", "text", "text", "text",
+     "text", "date", "date", "text", "text",
+     "text", "text", "numeric", "text", "text",
+     "text", "text", "text", "text", "text"))
View(df)
df <- read_excel("datosprestamos.xlsx", col_types = c("text",
+     "numeric", "text", "numeric", "text",
+     "text", "text", "text", "text", "text",
+     "text", "date", "date", "text", "text",
+     "text", "text", "numeric", "text", "text",
+     "text", "text", "text", "text", "text"))
df <- read_excel("datosprestamos.xlsx", col_types = c("text",
"numeric", "text", "numeric", "text",
"text", "text", "text", "text", "text",
"text", "date", "date", "text", "text",
"text", "text", "numeric", "text", "text",
"text", "text", "text", "text", "text"))
View(df)
descriptiva <-  function(Datos,columnas,colagruparpor) {
filtrar_por <-  unique(Datos[,colagruparpor])
listaout <- list()
for (g in (1:nrow(filtrar_por)))
{
df <-   filter(Datos, (Datos[,colagruparpor] == str_trim(filtrar_por[g,1])) ) %>%
select(c(colagruparpor,columnas))
for (i in (2:ncol(df)))
{
lista <- list(
Grupo = str_trim(filtrar_por[g,1]),
media =   apply(df[,i],2,mean),
cutmedia =    apply(df[,i],2,mean,trim=0.05),
StdErr   =  apply(df[,i],2,sd) / sqrt(apply(df[,i],2,length)),
IC95LimInf =  apply(df[,i],2,mean) - (1.96 *  apply(df[,i],2,sd) / sqrt(apply(df[,i],2,length))),
IC95LimSup =  apply(df[,i],2,mean) + (1.96 *  apply(df[,i],2,sd) / sqrt(apply(df[,i],2,length))),
mediana=   apply(df[,i],2,median),
sd=    apply(df[,i],2,sd),
var =   apply(df[,i],2,var),
obs =   apply(df[,i],2,length),
Min =   apply(df[,i],2,min),
Max=    apply(df[,i],2,max),
Rango =   apply(df[,i],2,max) -  apply(df[,i],2,min),
RangoIQR =   apply(df[,i],2,quantile,prob=0.25),
Q1=   apply(df[,i],2,quantile,prob=0.75),
Q3=   apply(df[,i],2,quantile,prob=0.75) - apply(df[,i],2,quantile,prob=0.25),
skew=    apply(df[,i],2,skew),
kurtosis =   apply(df[,i],2, kurtosi)
)
listaout[[str_trim(filtrar_por[g,1])]] <- lista
}
}
#Colocando Nombres a las Columnas y Filas a la matriz estadistica descriptiva
mt <- matrix(ncol = nrow(filtrar_por), nrow = 18 )
colnames(mt) <- names(listaout)
rownames(mt) <- names(listaout[[1]])
for (i in names(listaout))
{
mt[,i] <- unlist(listaout[[i]])
}
mt
}
crea_errdiagram <- function(Datos,columna,agrupapor,titulo="Titulo",xlabel="xlabel",ylabel="ylabel"){
dfsumarize <- Datos %>%
group_by(get(agrupapor)) %>%
summarise(
sd = sd(get(columna),na.rm = TRUE),
media = mean(get(columna)))
#####
#  Creo grafico de errores o de medias
####
ggplot(dfsumarize, aes(x=reorder(`get(agrupapor)`,media), y=media,color=`get(agrupapor)`)) +
geom_line(aes(group = 1)) +
geom_errorbar( aes(ymin=media-sd,ymax=media + sd),width = 0.2) +
geom_point(size = 2) +
labs(title = titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
creaboxplot <- function(Datos, var_x,var_y,Titulo,xlabel="NA",ylabel="NA"){
ggplot(data = Datos) +
geom_boxplot(mapping = aes(
x = reorder(get(var_x),get(var_y),FUN = median),
y = get(var_y),fill=get(var_x)
)) +
labs(title = Titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold"))
}
creascatplot <- function(Datos, var_x,var_y,Titulo,xlabel,ylabel="NA",categoria="group"){
ggplot(data = Datos) +
geom_point(mapping = aes(x = get(var_x), y = get(var_y),color=get(categoria))) +
labs(title = Titulo,
subtitle = "",
caption = "Data source: Analiza tus Datos",
x = xlabel,
y = ylabel,
tag = "Primeros Programas con R") +
theme(plot.title    = element_text(size =12, face = "bold", hjust = 0.5  ),
plot.subtitle = element_text(size = 9, hjust = 0.5),
plot.caption  = element_text(size = 7),
plot.tag      = element_text(size = 7),
axis.text     = element_text(size=8),
axis.title    = element_text(size=8,face="bold")) +
geom_smooth(mapping = aes(x = get(var_x), y = get(var_y)), orientation = "y")
#  facet_grid(. ~ get(categoria))
}
creagrafcorr <-  function(Datos,colx,coly,title,etiquetax,etiquetay,grupo=NA)  {
ggscatter(Datos, x = colx, y = coly,
color = ifelse(is.na(grupo),"black",grupo), shape = 21, size = 3,
fill = ifelse(is.na(grupo),"lightgray",grupo),
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
facet.by = ifelse(is.na(grupo),NA,grupo),
title = title,
xlab =  etiquetax,
ylab =  etiquetay,
add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"),
conf.int = TRUE,
cor.coef = TRUE,
show.legend.text = TRUE,
cor.coeff.args = list(method = "pearson", label.x.npc = "left", label.y.npc = "top", label.sep = "\n")
) +
stat_regline_equation(label.x.npc = "left",label.y.npc = "top",output.type = "expression", inherit.aes = TRUE)
}
str(df)
dir(df)
summary(df)
####################################
# Setear el working directory
# Leo la tabla de datos
####################################
setwd("C:/Users/apalmad/Desktop/Analiza tus Datos/Proyectos R/Caso Practico/Ejercicio 4 EstInferencial II")
Datos <- read_xlsx("Datos.xlsx")
Datos <- read_xlsx("Datos.xlsx")
###############################
# Describo las variables
###############################
str(Datos)
EstaDesc_FertilityxGrupo <- t(describeBy(Datos$fertility,Datos$group,mat=TRUE))
EstaDesc_FertilityxGrupo
#ANOVA
aovinfMortxGrupo <- (aov(infantMortality ~ group,Datos)) # Anova del grupo
summary(aovinfMortxGrupo) # Imprime suma resisuales, mean sq, Significancia
TukeyHSD(aovinfMortxGrupo) ## Anova entre los grupos para verlo por pares
# lifeExpF paso reviso descriptiva de datos, luego un blox plot,diagram error y anovas por grupo InfantMortality
dfe <- descriptiva(Datos,(6:6),(3:3))
creaboxplot(Datos,"group","lifeExpF", "lifeExpF by Group","Grupo","lifeExpF")
crea_errdiagram(Datos,"lifeExpF","group","lifeExpF x Grupos","Grupos","Avg(lifeExpF)") #diagrama de error
#ANOVA
aovlifeExpF<- (aov(lifeExpF ~ group,Datos)) # Anova del grupo
summary(aovlifeExpF) # Imprime suma resisuales, mean sq, Significancia
TukeyHSD(aovlifeExpF) ## Anova entre los grupos para verlo por pares
str(df)
